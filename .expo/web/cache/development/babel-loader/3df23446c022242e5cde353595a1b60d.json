{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Mughees/Projects/React.Pro/Game Rental/Code/node_modules/react-native-dropdownalert/TextView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar TextView = function (_Component) {\n  _inherits(TextView, _Component);\n\n  var _super = _createSuper(TextView);\n\n  function TextView() {\n    _classCallCheck(this, TextView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextView, [{\n    key: \"render\",\n    value: function render() {\n      var text = this.props.text;\n\n      if (!text || text.length == 0) {\n        return null;\n      }\n\n      return React.createElement(Text, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }\n      }), text);\n    }\n  }]);\n\n  return TextView;\n}(Component);\n\nTextView.propTypes = {\n  text: PropTypes.string.isRequired,\n  style: PropTypes.object,\n  numberOfLines: PropTypes.number\n};\nTextView.defaultProps = {\n  numberOfLines: 1,\n  style: {\n    fontSize: 16,\n    textAlign: 'left',\n    fontWeight: 'normal',\n    color: 'white',\n    backgroundColor: 'transparent'\n  }\n};\nexport { TextView as default };","map":{"version":3,"sources":["/Users/Mughees/Projects/React.Pro/Game Rental/Code/node_modules/react-native-dropdownalert/TextView.js"],"names":["React","Component","PropTypes","TextView","text","props","length","propTypes","string","isRequired","style","object","numberOfLines","number","defaultProps","fontSize","textAlign","fontWeight","color","backgroundColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;IAGqBC,Q;;;;;;;;;;;;;WAgBnB,kBAAS;AACP,UAAQC,IAAR,GAAiB,KAAKC,KAAtB,CAAQD,IAAR;;AACA,UAAI,CAACA,IAAD,IAASA,IAAI,CAACE,MAAL,IAAe,CAA5B,EAA+B;AAC7B,eAAO,IAAP;AACD;;AACD,aAAO,oBAAC,IAAD,eAAU,KAAKD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuBD,IAAvB,CAAP;AACD;;;;EAtBmCH,S;;AAAjBE,Q,CACZI,S,GAAY;AACjBH,EAAAA,IAAI,EAAEF,SAAS,CAACM,MAAV,CAAiBC,UADN;AAEjBC,EAAAA,KAAK,EAAER,SAAS,CAACS,MAFA;AAGjBC,EAAAA,aAAa,EAAEV,SAAS,CAACW;AAHR,C;AADAV,Q,CAMZW,Y,GAAe;AACpBF,EAAAA,aAAa,EAAE,CADK;AAEpBF,EAAAA,KAAK,EAAE;AACLK,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,SAAS,EAAE,MAFN;AAGLC,IAAAA,UAAU,EAAE,QAHP;AAILC,IAAAA,KAAK,EAAE,OAJF;AAKLC,IAAAA,eAAe,EAAE;AALZ;AAFa,C;SANHhB,Q","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from 'react-native';\n\nexport default class TextView extends Component {\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    style: PropTypes.object,\n    numberOfLines: PropTypes.number,\n  };\n  static defaultProps = {\n    numberOfLines: 1,\n    style: {\n      fontSize: 16,\n      textAlign: 'left',\n      fontWeight: 'normal',\n      color: 'white',\n      backgroundColor: 'transparent',\n    },\n  };\n  render() {\n    const { text } = this.props;\n    if (!text || text.length == 0) {\n      return null;\n    }\n    return <Text {...this.props}>{text}</Text>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}