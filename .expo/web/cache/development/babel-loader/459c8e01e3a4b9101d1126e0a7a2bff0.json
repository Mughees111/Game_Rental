{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Mughees/Projects/React.Pro/Game Rental/Code/src/Screens/Address1.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AddressLocation } from \"../Components/SvgIcons\";\nimport { doConsole, retrieveItem, storeItem, validateEmail } from \"./../utils/functions\";\nimport { urls } from \"./../utils/Api_urls\";\nimport { changeLoggedIn, changeLoggedInVendor } from \"../../Common\";\nimport DropdownAlert from \"react-native-dropdownalert\";\nimport { useState, useEffect } from 'react';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nvar alertRef;\n\nvar Address1 = function Address1(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      langtext = _useState6[0],\n      setLangtext = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  useFocusEffect(React.useCallback(function () {\n    retrieveItem(\"login_data\").then(function (data) {\n      setUser(data);\n    });\n  }, []));\n\n  var doSignup = function doSignup() {\n    if (address.length < 6) {\n      alertRef.alertWithType(\"error\", \"Error\", \"Please enter a valid Address\");\n      return;\n    }\n\n    goSignup();\n  };\n\n  var goSignup = function goSignup() {\n    setLoading(true);\n    var body_data = {\n      token: user == null ? void 0 : user.token,\n      address: address\n    };\n    doConsole(\" I request @ \" + urls.API + \"update_address\");\n    doConsole(body_data);\n    fetch(urls.API + 'update_address', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body_data)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      doConsole(\" I receive \");\n      doConsole(responseJson);\n\n      if (responseJson.action == \"success\") {\n        storeItem(\"login_data\", responseJson.data).then(function () {\n          setLoading(false);\n\n          if (responseJson.data.step == 1) {\n            navigation.navigate(\"Address1\");\n          } else if (responseJson.data.step == 2) {\n            navigation.navigate(\"Interests\");\n          } else if (responseJson.data.step == 3) {\n            navigation.navigate(\"TitleYouOwn\");\n          } else if (responseJson.data.step == 4) {\n            navigation.navigate(\"SystemOwns\");\n          } else {\n            changeLoggedIn.changeNow(1);\n          }\n        });\n      } else {\n        setLoading(false);\n        alertRef.alertWithType(\"error\", \"Error\", responseJson.error);\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      alertRef.alertWithType(\"error\", \"Error\", \"Internet error\");\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      zIndex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, React.createElement(DropdownAlert, {\n    ref: function ref(_ref) {\n      return alertRef = _ref;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })), React.createElement(Image, {\n    source: require(\"../assets/Map.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.address,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Enter Text\",\n    placeholderTextColor: \"#6D6D6D\",\n    autoCapitalize: \"none\",\n    value: address,\n    onChangeText: function onChangeText(t) {\n      return setAddress(t);\n    },\n    style: {\n      backgroundColor: 'white',\n      borderBottomWidth: 0,\n      fontFamily: 'PRe',\n      fontSize: 13,\n      width: \"90%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, React.createElement(AddressLocation, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (!loading) doSignup();\n    },\n    style: {\n      width: 308,\n      height: 48,\n      backgroundColor: '#A047C8',\n      position: 'absolute',\n      bottom: 30,\n      alignSelf: 'center',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 9,\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: 'PMe',\n      fontSize: 18,\n      color: '#FFFFFF'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Choose Address\"), loading && React.createElement(ActivityIndicator, {\n    color: \"#fff\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 111\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  address: {\n    width: 308,\n    height: 48,\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: 57,\n    alignSelf: 'center',\n    borderRadius: 8,\n    paddingLeft: 15,\n    paddingRight: 10,\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    alignItems: 'center',\n    elevation: 2\n  }\n});\nexport default Address1;","map":{"version":3,"sources":["/Users/Mughees/Projects/React.Pro/Game Rental/Code/src/Screens/Address1.js"],"names":["StatusBar","React","AddressLocation","doConsole","retrieveItem","storeItem","validateEmail","urls","changeLoggedIn","changeLoggedInVendor","DropdownAlert","useState","useEffect","useFocusEffect","useNavigation","alertRef","Address1","props","navigation","loading","setLoading","address","setAddress","langtext","setLangtext","email","setEmail","password","setPassword","user","setUser","useCallback","then","data","doSignup","length","alertWithType","goSignup","body_data","token","API","fetch","method","headers","Accept","body","JSON","stringify","response","json","responseJson","action","step","navigate","changeNow","error","catch","flex","zIndex","ref","require","styles","t","backgroundColor","borderBottomWidth","fontFamily","fontSize","width","height","position","bottom","alignSelf","justifyContent","alignItems","borderRadius","flexDirection","color","StyleSheet","create","top","paddingLeft","paddingRight","elevation"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar'\nimport React from 'react'\nimport { View,TouchableOpacity ,TextInput,Text,Image, StyleSheet, ActivityIndicator } from 'react-native'\nimport { AddressLocation } from '../Components/SvgIcons'\n\nimport { doConsole, retrieveItem, storeItem,validateEmail } from \"./../utils/functions\";\nimport { urls } from \"./../utils/Api_urls\";\nimport { changeLoggedIn, changeLoggedInVendor } from \"../../Common\";\n\n\nimport DropdownAlert from \"react-native-dropdownalert\";\nimport { useState, useEffect } from 'react';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nvar alertRef;\n\n\nconst Address1 = (props) => {\n\n\n  const navigation = useNavigation()\n\n  const [loading, setLoading] = useState(false)\n  const [address, setAddress] = useState(\"\")\n  const [langtext, setLangtext] = useState(false)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [user, setUser] = React.useState({})\n  useFocusEffect(React.useCallback(() => {\n      retrieveItem(\"login_data\").then((data) => {\n          setUser(data)\n      })\n  }, []))\n\n//   useEffect(()=>{\n//       if(user && user?.token)\n//       {\n//           getData()\n//           askNotificationPermission()\n//       }\n//   },[user])\n\n  const doSignup = ()=>{\n  \n\n\n    if(address.length<6)\n    {\n      alertRef.alertWithType(\"error\",\"Error\",\"Please enter a valid Address\");\n      return;\n    }\n    goSignup()\n  }\n\n\n  const goSignup = ()=>{\n    setLoading(true)\n        \n        var body_data = {token:user?.token,address};\n        doConsole(\" I request @ \"+urls.API+\"update_address\");\n        doConsole(body_data);\n        fetch(urls.API + 'update_address', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body_data),\n        }).then((response) => response.json())\n        .then((responseJson) => {\n            doConsole(\" I receive \");\n            doConsole(responseJson);\n            if (responseJson.action == \"success\") {\n                storeItem(\"login_data\", responseJson.data).then(() => {\n                  setLoading(false)\n                    if(responseJson.data.step==1)\n                    {\n                        navigation.navigate(\"Address1\")\n                    }\n                    else if(responseJson.data.step==2)\n                    {\n                        navigation.navigate(\"Interests\")\n                    }\n                    else if(responseJson.data.step==3)\n                    {\n                        navigation.navigate(\"TitleYouOwn\")\n                    }\n                    else if(responseJson.data.step==4)\n                    {\n                        navigation.navigate(\"SystemOwns\")\n                    }\n                    else{\n                        changeLoggedIn.changeNow(1)\n                    }\n                });\n            }\n            else {\n                setLoading(false)\n                alertRef.alertWithType(\"error\",\"Error\",responseJson.error)\n            }\n        }).catch((error) => {\n            setLoading(false)\n            alertRef.alertWithType(\"error\",\"Error\",\"Internet error\")\n        });\n  }\n\n    return (\n        <View style={{flex:1}}>\n            <StatusBar\n                hidden={true}\n            />\n            <View style={{ zIndex: 1 }}>\n              <DropdownAlert ref={ref => alertRef = ref} />\n            </View>\n            <Image\n                source={require(\"../assets/Map.png\")}\n            />\n            <TouchableOpacity style={styles.address}>\n                <TextInput\n                    placeholder=\"Enter Text\"\n                    placeholderTextColor=\"#6D6D6D\"\n                    autoCapitalize={\"none\"}\n                    value={address}\n                    onChangeText={(t)=>setAddress(t)}\n                    style={{\n                        backgroundColor:'white',\n                        borderBottomWidth:0,\n                        fontFamily:'PRe',\n                        fontSize:13,\n                        width:\"90%\"\n                    }}\n                />\n                <TouchableOpacity>\n                    <AddressLocation/>\n                </TouchableOpacity>\n            </TouchableOpacity>\n\n            <TouchableOpacity \n                 onPress={()=>{\n                    if(!loading) doSignup()\n                    // props.navigation.navigate('SignIn')\n                    \n                }}\n                style={{width: 308,height:48,backgroundColor: '#A047C8',position: 'absolute',bottom:30,alignSelf:'center',justifyContent:'center',alignItems:'center',borderRadius:9,flexDirection:\"row\"}}>\n                <Text style={{fontFamily:'PMe',fontSize:18,color:'#FFFFFF'}}>Choose Address</Text>{loading && <ActivityIndicator color={\"#fff\"} size={\"small\"} />}\n            </TouchableOpacity>\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    address : {\n        width: 308,\n        height:48,\n        backgroundColor: '#FFFFFF',\n        position: 'absolute',\n        top:57,\n        alignSelf:'center',\n        borderRadius:8,\n        paddingLeft:15,\n        paddingRight:10,\n        justifyContent:'space-between',\n        flexDirection:'row',\n        alignItems:'center',\n        elevation:2,\n        \n    }\n})\nexport default Address1\n"]},"metadata":{},"sourceType":"module"}