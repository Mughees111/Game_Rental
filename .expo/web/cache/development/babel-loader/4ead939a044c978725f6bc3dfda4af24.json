{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar Queue = function () {\n  function Queue() {\n    _classCallCheck(this, Queue);\n\n    this.data = [];\n  }\n\n  _createClass(Queue, [{\n    key: \"firstItem\",\n    get: function get() {\n      if (!this.isEmpty) {\n        return this.data[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.data.length;\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.size === 0;\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(item) {\n      this.data.push(item);\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      if (!this.isEmpty) {\n        this.data.shift();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.data = [];\n    }\n  }]);\n\n  return Queue;\n}();\n\nexport { Queue as default };","map":{"version":3,"sources":["/Users/Mughees/Projects/React.Pro/Game Rental/Code/node_modules/react-native-dropdownalert/Queue.js"],"names":["Queue","data","isEmpty","length","size","item","push","shift"],"mappings":";;;IAAqBA,K;AACnB,mBAAc;AAAA;;AACZ,SAAKC,IAAL,GAAY,EAAZ;AACD;;;;SACD,eAAgB;AACd,UAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,eAAO,KAAKD,IAAL,CAAU,CAAV,CAAP;AACD;;AACD,aAAO,IAAP;AACD;;;SACD,eAAW;AACT,aAAO,KAAKA,IAAL,CAAUE,MAAjB;AACD;;;SACD,eAAc;AACZ,aAAO,KAAKC,IAAL,KAAc,CAArB;AACD;;;WACD,iBAAQC,IAAR,EAAc;AACZ,WAAKJ,IAAL,CAAUK,IAAV,CAAeD,IAAf;AACD;;;WACD,mBAAU;AACR,UAAI,CAAC,KAAKH,OAAV,EAAmB;AACjB,aAAKD,IAAL,CAAUM,KAAV;AACD;AACF;;;WACD,iBAAQ;AACN,WAAKN,IAAL,GAAY,EAAZ;AACD;;;;;;SA1BkBD,K","sourcesContent":["export default class Queue {\n  constructor() {\n    this.data = [];\n  }\n  get firstItem() {\n    if (!this.isEmpty) {\n      return this.data[0];\n    }\n    return null;\n  }\n  get size() {\n    return this.data.length;\n  }\n  get isEmpty() {\n    return this.size === 0;\n  }\n  enqueue(item) {\n    this.data.push(item);\n  }\n  dequeue() {\n    if (!this.isEmpty) {\n      this.data.shift();\n    }\n  }\n  clear() {\n    this.data = [];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}