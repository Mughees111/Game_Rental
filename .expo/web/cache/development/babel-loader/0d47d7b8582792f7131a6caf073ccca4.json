{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Mughees/Projects/React.Pro/Game Rental/Code/node_modules/react-native-dropdownalert/DropdownAlert.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport PropTypes from 'prop-types';\nimport { DEFAULT_IMAGE_DIMENSIONS, IS_ANDROID, IS_IOS_BELOW_11, TYPE, ACTION, HEIGHT, getDefaultStatusBarStyle, getDefaultStatusBarBackgroundColor } from \"./constants\";\nimport TextView from \"./TextView\";\nimport ImageView from \"./imageview\";\nimport CancelButton from \"./CancelButton\";\nimport Queue from \"./Queue\";\n\nvar DropdownAlert = function (_Component) {\n  _inherits(DropdownAlert, _Component);\n\n  var _super = _createSuper(DropdownAlert);\n\n  function DropdownAlert(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownAlert);\n\n    _this = _super.call(this, props);\n\n    _this.getPanResponder = function () {\n      return PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(event, gestureState) {\n          return _this._onShouldStartPan(event, gestureState);\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gestureState) {\n          return _this._onShouldMovePan(event, gestureState);\n        },\n        onPanResponderMove: function onPanResponderMove(event, gestureState) {\n          return _this._onMovePan(event, gestureState);\n        },\n        onPanResponderRelease: function onPanResponderRelease(event, gestureState) {\n          return _this._onDonePan(event, gestureState);\n        },\n        onPanResponderTerminate: function onPanResponderTerminate(event, gestureState) {\n          return _this._onDonePan(event, gestureState);\n        }\n      });\n    };\n\n    _this._onShouldStartPan = function (event, gestureState) {\n      return _this.props.panResponderEnabled;\n    };\n\n    _this._onShouldMovePan = function (event, gestureState) {\n      var _this$props = _this.props,\n          sensitivity = _this$props.sensitivity,\n          panResponderEnabled = _this$props.panResponderEnabled;\n      var dx = Math.abs(gestureState.dx);\n      var dy = Math.abs(gestureState.dy);\n      var isDxSensitivity = dx < sensitivity;\n      var isDySensitivity = dy >= sensitivity;\n      return isDxSensitivity && isDySensitivity && panResponderEnabled;\n    };\n\n    _this._onMovePan = function (event, gestureState) {\n      if (gestureState.dy < 0) {\n        _this.setState({\n          topValue: gestureState.dy\n        });\n      }\n    };\n\n    _this._onDonePan = function (event, gestureState) {\n      var start = _this.getStartDelta(_this.state.height, _this.props.startDelta);\n\n      var delta = start / 5;\n\n      if (gestureState.dy < delta) {\n        _this.closeAction(ACTION.pan);\n      }\n    };\n\n    _this.alertWithType = function _callee() {\n      var type,\n          title,\n          message,\n          payload,\n          interval,\n          closeInterval,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              type = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n              title = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n              message = _args.length > 2 && _args[2] !== undefined ? _args[2] : '';\n              payload = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n              interval = _args.length > 4 ? _args[4] : undefined;\n              closeInterval = _this.props.closeInterval;\n              data = {\n                type: type,\n                title: _this.getStringValue(title),\n                message: _this.getStringValue(message),\n                payload: payload,\n                interval: closeInterval\n              };\n\n              if (interval && typeof interval === 'number') {\n                data.interval = interval;\n              }\n\n              _this.queue.enqueue(data);\n\n              if (_this.getQueueSize() === 1) {\n                _this._processQueue();\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.clearQueue = function () {\n      _this.queue.clear();\n    };\n\n    _this.getQueueSize = function () {\n      return _this.queue.size;\n    };\n\n    _this._processQueue = function () {\n      var data = _this.queue.firstItem;\n\n      if (data) {\n        _this.open(data);\n      }\n    };\n\n    _this.open = function () {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _this.alertData = data;\n\n      _this.setState({\n        isOpen: true\n      });\n\n      _this.animate(1, 450, function () {\n        if (data.interval > 0) {\n          _this.closeAutomatic(data.interval);\n        }\n      });\n    };\n\n    _this.closeAction = function () {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ACTION.programmatic;\n      var onDone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n      if (_this.state.isOpen) {\n        _this.clearCloseTimeoutID();\n\n        _this.close(action, onDone);\n      }\n    };\n\n    _this.closeAutomatic = function (interval) {\n      _this.clearCloseTimeoutID();\n\n      _this.closeTimeoutID = setTimeout(function () {\n        _this.close(ACTION.automatic);\n      }, interval);\n    };\n\n    _this.close = function (action) {\n      var onDone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n      _this.animate(0, 250, function () {\n        var _this$props2 = _this.props,\n            onClose = _this$props2.onClose,\n            updateStatusBar = _this$props2.updateStatusBar,\n            onCancel = _this$props2.onCancel,\n            onTap = _this$props2.onTap;\n        _this.alertData.action = action;\n\n        _this.queue.dequeue();\n\n        if (action === ACTION.cancel) {\n          onCancel(_this.alertData);\n        } else {\n          if (action === ACTION.tap) {\n            onTap(_this.alertData);\n          }\n\n          onClose(_this.alertData);\n        }\n\n        _this.setState({\n          isOpen: false,\n          topValue: 0,\n          height: 0\n        });\n\n        _this.updateStatusBar(updateStatusBar, false);\n\n        _this._processQueue();\n\n        onDone();\n      });\n    };\n\n    _this.updateStatusBar = function () {\n      var shouldUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var active = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (shouldUpdate) {\n        if (IS_ANDROID) {\n          var _this$props3 = _this.props,\n              inactiveStatusBarBackgroundColor = _this$props3.inactiveStatusBarBackgroundColor,\n              activeStatusBarBackgroundColor = _this$props3.activeStatusBarBackgroundColor,\n              translucent = _this$props3.translucent;\n\n          if (active) {\n            var backgroundColor = activeStatusBarBackgroundColor;\n            var type = _this.alertData.type;\n\n            if (type !== TYPE.custom) {\n              backgroundColor = _this.getBackgroundColorForType(type);\n            }\n\n            StatusBar.setBackgroundColor(backgroundColor, true);\n            StatusBar.setTranslucent(translucent);\n          } else {\n            StatusBar.setBackgroundColor(inactiveStatusBarBackgroundColor, true);\n          }\n        }\n\n        var _this$props4 = _this.props,\n            inactiveStatusBarStyle = _this$props4.inactiveStatusBarStyle,\n            activeStatusBarStyle = _this$props4.activeStatusBarStyle;\n\n        if (active) {\n          StatusBar.setBarStyle(activeStatusBarStyle, true);\n        } else {\n          StatusBar.setBarStyle(inactiveStatusBarStyle, true);\n        }\n      }\n    };\n\n    _this.clearCloseTimeoutID = function () {\n      if (_this.closeTimeoutID) {\n        clearTimeout(_this.closeTimeoutID);\n      }\n    };\n\n    _this.animate = function (toValue) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 450;\n      var onComplete = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n      var _this$props5 = _this.props,\n          useNativeDriver = _this$props5.useNativeDriver,\n          isInteraction = _this$props5.isInteraction;\n      Animated.spring(_this.state.animationValue, {\n        toValue: toValue,\n        duration: duration,\n        friction: 9,\n        useNativeDriver: useNativeDriver,\n        isInteraction: isInteraction\n      }).start(onComplete);\n    };\n\n    _this.getStartDelta = function (height, start) {\n      var windowHeight = HEIGHT;\n      var startMin = 0 - height;\n      var startMax = windowHeight + height;\n\n      if (start < 0 && start !== startMin) {\n        return startMin;\n      } else if (start > startMax) {\n        return startMax;\n      }\n\n      return start;\n    };\n\n    _this.getEndDelta = function (height, end) {\n      var windowHeight = HEIGHT;\n      var endMin = 0;\n      var endMax = windowHeight;\n\n      if (end < endMin) {\n        return endMin;\n      } else if (end >= endMax) {\n        return endMax - height;\n      }\n\n      return end;\n    };\n\n    _this.getOutputRange = function (height, startDelta, endDelta) {\n      if (!height) {\n        return [startDelta, endDelta];\n      }\n\n      var start = _this.getStartDelta(height, startDelta);\n\n      var end = _this.getEndDelta(height, endDelta);\n\n      return [start, end];\n    };\n\n    _this.state = {\n      animationValue: new Animated.Value(0),\n      isOpen: false,\n      topValue: 0,\n      height: 0\n    };\n    _this.alertData = {\n      type: '',\n      message: '',\n      title: '',\n      payload: {},\n      interval: props.closeInterval,\n      action: ''\n    };\n    _this.panResponder = _this.getPanResponder();\n    _this.queue = new Queue();\n    return _this;\n  }\n\n  _createClass(DropdownAlert, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.isOpen) {\n        this.closeAction(ACTION.programmatic);\n      }\n    }\n  }, {\n    key: \"getStringValue\",\n    value: function getStringValue(value) {\n      try {\n        if (typeof value !== 'string') {\n          if (Array.isArray(value)) {\n            return value.join(' ');\n          }\n\n          if (typeof value === 'object') {\n            return \"\" + JSON.stringify(value);\n          }\n\n          return \"\" + value;\n        }\n\n        return value;\n      } catch (error) {\n        return error.toString();\n      }\n    }\n  }, {\n    key: \"getStyleForType\",\n    value: function getStyleForType(type) {\n      var defaultContainer = this.props.defaultContainer;\n\n      switch (type) {\n        case TYPE.info:\n          return [StyleSheet.flatten(defaultContainer), {\n            backgroundColor: this.props.infoColor\n          }];\n\n        case TYPE.warn:\n          return [StyleSheet.flatten(defaultContainer), {\n            backgroundColor: this.props.warnColor\n          }];\n\n        case TYPE.error:\n          return [StyleSheet.flatten(defaultContainer), {\n            backgroundColor: this.props.errorColor\n          }];\n\n        case TYPE.success:\n          return [StyleSheet.flatten(defaultContainer), {\n            backgroundColor: this.props.successColor\n          }];\n\n        default:\n          return [StyleSheet.flatten(defaultContainer), StyleSheet.flatten(this.props.containerStyle)];\n      }\n    }\n  }, {\n    key: \"getSourceForType\",\n    value: function getSourceForType(type) {\n      switch (type) {\n        case TYPE.info:\n          return this.props.infoImageSrc;\n\n        case TYPE.warn:\n          return this.props.warnImageSrc;\n\n        case TYPE.error:\n          return this.props.errorImageSrc;\n\n        case TYPE.success:\n          return this.props.successImageSrc;\n\n        default:\n          return this.props.imageSrc;\n      }\n    }\n  }, {\n    key: \"getBackgroundColorForType\",\n    value: function getBackgroundColorForType(type) {\n      switch (type) {\n        case TYPE.info:\n          return this.props.infoColor;\n\n        case TYPE.warn:\n          return this.props.warnColor;\n\n        case TYPE.error:\n          return this.props.errorColor;\n\n        case TYPE.success:\n          return this.props.successColor;\n\n        default:\n          return this.props.containerStyle.backgroundColor;\n      }\n    }\n  }, {\n    key: \"_onLayoutEvent\",\n    value: function _onLayoutEvent(event) {\n      var height = event.nativeEvent.layout.height;\n\n      if (height > this.state.height) {\n        var _this$props6 = this.props,\n            startDelta = _this$props6.startDelta,\n            endDelta = _this$props6.endDelta;\n        var start = this.getStartDelta(height, startDelta);\n        var end = this.getEndDelta(height, endDelta);\n\n        if (startDelta !== start || endDelta !== end) {\n          this.setState({\n            height: height\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_renderImage\",\n    value: function _renderImage(source) {\n      if (this.props.renderImage) {\n        return this.props.renderImage(this.props, this.alertData);\n      }\n\n      return React.createElement(ImageView, {\n        style: StyleSheet.flatten(this.props.imageStyle),\n        source: source,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"_renderTitle\",\n    value: function _renderTitle() {\n      if (this.props.renderTitle) {\n        return this.props.renderTitle(this.props, this.alertData);\n      }\n\n      var _this$props7 = this.props,\n          titleTextProps = _this$props7.titleTextProps,\n          titleStyle = _this$props7.titleStyle,\n          titleNumOfLines = _this$props7.titleNumOfLines;\n      return React.createElement(TextView, _extends({}, titleTextProps, {\n        style: StyleSheet.flatten(titleStyle),\n        numberOfLines: titleNumOfLines,\n        text: this.alertData.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"_renderMessage\",\n    value: function _renderMessage() {\n      if (this.props.renderMessage) {\n        return this.props.renderMessage(this.props, this.alertData);\n      }\n\n      var _this$props8 = this.props,\n          messageTextProps = _this$props8.messageTextProps,\n          messageStyle = _this$props8.messageStyle,\n          messageNumOfLines = _this$props8.messageNumOfLines;\n      return React.createElement(TextView, _extends({}, messageTextProps, {\n        style: StyleSheet.flatten(messageStyle),\n        numberOfLines: messageNumOfLines,\n        text: this.alertData.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"_renderCancel\",\n    value: function _renderCancel() {\n      var _this2 = this;\n\n      var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!show) {\n        return null;\n      }\n\n      if (this.props.renderCancel) {\n        return this.props.renderCancel(this.props, this.alertData);\n      } else {\n        var _this$props9 = this.props,\n            cancelBtnImageSrc = _this$props9.cancelBtnImageSrc,\n            cancelBtnImageStyle = _this$props9.cancelBtnImageStyle;\n        return React.createElement(CancelButton, {\n          imageStyle: cancelBtnImageStyle,\n          imageSrc: cancelBtnImageSrc,\n          onPress: function onPress() {\n            return _this2.closeAction(ACTION.cancel);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var isOpen = this.state.isOpen;\n\n      if (!isOpen) {\n        return null;\n      }\n\n      var _this$props10 = this.props,\n          elevation = _this$props10.elevation,\n          zIndex = _this$props10.zIndex,\n          wrapperStyle = _this$props10.wrapperStyle,\n          tapToCloseEnabled = _this$props10.tapToCloseEnabled,\n          accessibilityLabel = _this$props10.accessibilityLabel,\n          testID = _this$props10.testID,\n          accessible = _this$props10.accessible,\n          contentContainerStyle = _this$props10.contentContainerStyle,\n          defaultTextContainer = _this$props10.defaultTextContainer,\n          startDelta = _this$props10.startDelta,\n          endDelta = _this$props10.endDelta,\n          translucent = _this$props10.translucent,\n          updateStatusBar = _this$props10.updateStatusBar,\n          showCancel = _this$props10.showCancel;\n      var _this$state = this.state,\n          animationValue = _this$state.animationValue,\n          topValue = _this$state.topValue,\n          height = _this$state.height;\n      var _this$alertData = this.alertData,\n          type = _this$alertData.type,\n          payload = _this$alertData.payload;\n      var style = this.getStyleForType(type);\n      var imageSrc = this.getSourceForType(type);\n\n      if (payload && payload.hasOwnProperty('source') && payload.source && typeof payload.source !== 'object') {\n        imageSrc = payload.source;\n      }\n\n      if (IS_ANDROID && translucent) {\n        style = [style, {\n          paddingTop: StatusBar.currentHeight\n        }];\n      }\n\n      this.updateStatusBar(updateStatusBar, true);\n      var outputRange = this.getOutputRange(height, startDelta, endDelta);\n      var wrapperAnimStyle = {\n        transform: [{\n          translateY: animationValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: outputRange\n          })\n        }],\n        position: 'absolute',\n        top: topValue,\n        left: 0,\n        right: 0,\n        elevation: elevation\n      };\n\n      if (zIndex != null) {\n        wrapperAnimStyle.zIndex = zIndex;\n      }\n\n      var ContentView = SafeAreaView;\n\n      if (IS_IOS_BELOW_11 || IS_ANDROID) {\n        ContentView = View;\n      }\n\n      var activeOpacity = !tapToCloseEnabled || showCancel ? 1 : 0.95;\n      var onPress = !tapToCloseEnabled ? null : function () {\n        return _this3.closeAction(ACTION.tap);\n      };\n      return React.createElement(Animated.View, _extends({\n        ref: function ref(_ref) {\n          return _this3.mainView = _ref;\n        }\n      }, this.panResponder.panHandlers, {\n        style: [wrapperAnimStyle, wrapperStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 7\n        }\n      }), React.createElement(TouchableOpacity, {\n        activeOpacity: activeOpacity,\n        onPress: onPress,\n        disabled: !tapToCloseEnabled,\n        onLayout: function onLayout(event) {\n          return _this3._onLayoutEvent(event);\n        },\n        testID: testID,\n        accessibilityLabel: accessibilityLabel,\n        accessible: accessible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }\n      }, React.createElement(ContentView, {\n        style: StyleSheet.flatten(contentContainerStyle),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }\n      }, this._renderImage(imageSrc), React.createElement(View, {\n        style: StyleSheet.flatten(defaultTextContainer),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 15\n        }\n      }, this._renderTitle(), this._renderMessage())), this._renderCancel(showCancel))));\n    }\n  }]);\n\n  return DropdownAlert;\n}(Component);\n\nDropdownAlert.propTypes = {\n  imageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  infoImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  warnImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  errorImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  successImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  cancelBtnImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  infoColor: PropTypes.string,\n  warnColor: PropTypes.string,\n  errorColor: PropTypes.string,\n  successColor: PropTypes.string,\n  closeInterval: PropTypes.number,\n  startDelta: PropTypes.number,\n  endDelta: PropTypes.number,\n  wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  contentContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  messageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  imageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  cancelBtnImageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  titleNumOfLines: PropTypes.number,\n  messageNumOfLines: PropTypes.number,\n  onClose: PropTypes.func,\n  onCancel: PropTypes.func,\n  showCancel: PropTypes.bool,\n  tapToCloseEnabled: PropTypes.bool,\n  panResponderEnabled: PropTypes.bool,\n  translucent: PropTypes.bool,\n  useNativeDriver: PropTypes.bool,\n  isInteraction: PropTypes.bool,\n  activeStatusBarStyle: PropTypes.string,\n  activeStatusBarBackgroundColor: PropTypes.string,\n  inactiveStatusBarStyle: PropTypes.string,\n  inactiveStatusBarBackgroundColor: PropTypes.string,\n  updateStatusBar: PropTypes.bool,\n  elevation: PropTypes.number,\n  zIndex: PropTypes.number,\n  sensitivity: PropTypes.number,\n  defaultContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  defaultTextContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  renderImage: PropTypes.func,\n  renderCancel: PropTypes.func,\n  renderTitle: PropTypes.func,\n  renderMessage: PropTypes.func,\n  testID: PropTypes.string,\n  accessibilityLabel: PropTypes.string,\n  accessible: PropTypes.bool,\n  titleTextProps: PropTypes.object,\n  messageTextProps: PropTypes.object,\n  onTap: PropTypes.func\n};\nDropdownAlert.defaultProps = {\n  onClose: function onClose() {},\n  onCancel: function onCancel() {},\n  closeInterval: 4000,\n  startDelta: -100,\n  endDelta: 0,\n  titleNumOfLines: 1,\n  messageNumOfLines: 3,\n  imageSrc: null,\n  infoImageSrc: require(\"./assets/info.png\"),\n  warnImageSrc: require(\"./assets/warn.png\"),\n  errorImageSrc: require(\"./assets/error.png\"),\n  successImageSrc: require(\"./assets/success.png\"),\n  cancelBtnImageSrc: require(\"./assets/cancel.png\"),\n  infoColor: '#2B73B6',\n  warnColor: '#cd853f',\n  errorColor: '#cc3232',\n  successColor: '#32A54A',\n  showCancel: false,\n  tapToCloseEnabled: true,\n  panResponderEnabled: true,\n  wrapperStyle: null,\n  containerStyle: {\n    padding: 16,\n    flexDirection: 'row',\n    backgroundColor: '#202020'\n  },\n  contentContainerStyle: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  titleStyle: {\n    fontSize: 16,\n    textAlign: 'left',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'transparent'\n  },\n  messageStyle: {\n    fontSize: 14,\n    textAlign: 'left',\n    fontWeight: 'normal',\n    color: 'white',\n    backgroundColor: 'transparent'\n  },\n  imageStyle: {\n    padding: 8,\n    width: DEFAULT_IMAGE_DIMENSIONS,\n    height: DEFAULT_IMAGE_DIMENSIONS,\n    alignSelf: 'center'\n  },\n  cancelBtnImageStyle: {\n    padding: 8,\n    width: DEFAULT_IMAGE_DIMENSIONS,\n    height: DEFAULT_IMAGE_DIMENSIONS,\n    alignSelf: 'center'\n  },\n  defaultContainer: {\n    padding: 8,\n    flexDirection: 'row'\n  },\n  defaultTextContainer: {\n    flex: 1,\n    padding: 8\n  },\n  translucent: false,\n  activeStatusBarStyle: 'light-content',\n  activeStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n  inactiveStatusBarStyle: getDefaultStatusBarStyle(),\n  inactiveStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n  updateStatusBar: true,\n  isInteraction: true,\n  useNativeDriver: true,\n  elevation: 1,\n  zIndex: null,\n  sensitivity: 20,\n  renderImage: undefined,\n  renderCancel: undefined,\n  renderTitle: undefined,\n  renderMessage: undefined,\n  testID: undefined,\n  accessibilityLabel: undefined,\n  accessible: false,\n  titleTextProps: undefined,\n  messageTextProps: undefined,\n  onTap: function onTap() {}\n};\nexport { DropdownAlert as default };","map":{"version":3,"sources":["/Users/Mughees/Projects/React.Pro/Game Rental/Code/node_modules/react-native-dropdownalert/DropdownAlert.js"],"names":["React","Component","PropTypes","DEFAULT_IMAGE_DIMENSIONS","IS_ANDROID","IS_IOS_BELOW_11","TYPE","ACTION","HEIGHT","getDefaultStatusBarStyle","getDefaultStatusBarBackgroundColor","TextView","ImageView","CancelButton","Queue","DropdownAlert","props","getPanResponder","PanResponder","create","onStartShouldSetPanResponder","event","gestureState","_onShouldStartPan","onMoveShouldSetPanResponder","_onShouldMovePan","onPanResponderMove","_onMovePan","onPanResponderRelease","_onDonePan","onPanResponderTerminate","panResponderEnabled","sensitivity","dx","Math","abs","dy","isDxSensitivity","isDySensitivity","setState","topValue","start","getStartDelta","state","height","startDelta","delta","closeAction","pan","alertWithType","type","title","message","payload","interval","closeInterval","data","getStringValue","queue","enqueue","getQueueSize","_processQueue","clearQueue","clear","size","firstItem","open","alertData","isOpen","animate","closeAutomatic","action","programmatic","onDone","clearCloseTimeoutID","close","closeTimeoutID","setTimeout","automatic","onClose","updateStatusBar","onCancel","onTap","dequeue","cancel","tap","shouldUpdate","active","inactiveStatusBarBackgroundColor","activeStatusBarBackgroundColor","translucent","backgroundColor","custom","getBackgroundColorForType","StatusBar","setBackgroundColor","setTranslucent","inactiveStatusBarStyle","activeStatusBarStyle","setBarStyle","clearTimeout","toValue","duration","onComplete","useNativeDriver","isInteraction","Animated","spring","animationValue","friction","windowHeight","startMin","startMax","getEndDelta","end","endMin","endMax","getOutputRange","endDelta","Value","panResponder","value","Array","isArray","join","JSON","stringify","error","toString","defaultContainer","info","StyleSheet","flatten","infoColor","warn","warnColor","errorColor","success","successColor","containerStyle","infoImageSrc","warnImageSrc","errorImageSrc","successImageSrc","imageSrc","nativeEvent","layout","source","renderImage","imageStyle","renderTitle","titleTextProps","titleStyle","titleNumOfLines","renderMessage","messageTextProps","messageStyle","messageNumOfLines","show","renderCancel","cancelBtnImageSrc","cancelBtnImageStyle","elevation","zIndex","wrapperStyle","tapToCloseEnabled","accessibilityLabel","testID","accessible","contentContainerStyle","defaultTextContainer","showCancel","style","getStyleForType","getSourceForType","hasOwnProperty","paddingTop","currentHeight","outputRange","wrapperAnimStyle","transform","translateY","interpolate","inputRange","position","top","left","right","ContentView","SafeAreaView","View","activeOpacity","onPress","ref","mainView","panHandlers","_onLayoutEvent","_renderImage","_renderTitle","_renderMessage","_renderCancel","propTypes","oneOfType","string","number","object","func","bool","defaultProps","require","padding","flexDirection","flex","fontSize","textAlign","fontWeight","color","width","alignSelf","undefined"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;;AAUA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,wBADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,wBAPF,EAQEC,kCARF;AAUA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,YAAP;AACA,OAAOC,KAAP;;IAEqBC,a;;;;;AAyKnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAwBnBC,eAxBmB,GAwBD,YAAM;AACtB,aAAOC,YAAY,CAACC,MAAb,CAAoB;AACzBC,QAAAA,4BAA4B,EAAE,sCAACC,KAAD,EAAQC,YAAR;AAAA,iBAC5B,MAAKC,iBAAL,CAAuBF,KAAvB,EAA8BC,YAA9B,CAD4B;AAAA,SADL;AAGzBE,QAAAA,2BAA2B,EAAE,qCAACH,KAAD,EAAQC,YAAR;AAAA,iBAC3B,MAAKG,gBAAL,CAAsBJ,KAAtB,EAA6BC,YAA7B,CAD2B;AAAA,SAHJ;AAKzBI,QAAAA,kBAAkB,EAAE,4BAACL,KAAD,EAAQC,YAAR;AAAA,iBAClB,MAAKK,UAAL,CAAgBN,KAAhB,EAAuBC,YAAvB,CADkB;AAAA,SALK;AAOzBM,QAAAA,qBAAqB,EAAE,+BAACP,KAAD,EAAQC,YAAR;AAAA,iBACrB,MAAKO,UAAL,CAAgBR,KAAhB,EAAuBC,YAAvB,CADqB;AAAA,SAPE;AASzBQ,QAAAA,uBAAuB,EAAE,iCAACT,KAAD,EAAQC,YAAR;AAAA,iBACvB,MAAKO,UAAL,CAAgBR,KAAhB,EAAuBC,YAAvB,CADuB;AAAA;AATA,OAApB,CAAP;AAYD,KArCkB;;AAAA,UAsCnBC,iBAtCmB,GAsCC,UAACF,KAAD,EAAQC,YAAR,EAAyB;AAC3C,aAAO,MAAKN,KAAL,CAAWe,mBAAlB;AACD,KAxCkB;;AAAA,UAyCnBN,gBAzCmB,GAyCA,UAACJ,KAAD,EAAQC,YAAR,EAAyB;AAC1C,wBAA2C,MAAKN,KAAhD;AAAA,UAAOgB,WAAP,eAAOA,WAAP;AAAA,UAAoBD,mBAApB,eAAoBA,mBAApB;AACA,UAAME,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASb,YAAY,CAACW,EAAtB,CAAX;AACA,UAAMG,EAAE,GAAGF,IAAI,CAACC,GAAL,CAASb,YAAY,CAACc,EAAtB,CAAX;AACA,UAAMC,eAAe,GAAGJ,EAAE,GAAGD,WAA7B;AACA,UAAMM,eAAe,GAAGF,EAAE,IAAIJ,WAA9B;AACA,aAAOK,eAAe,IAAIC,eAAnB,IAAsCP,mBAA7C;AACD,KAhDkB;;AAAA,UAiDnBJ,UAjDmB,GAiDN,UAACN,KAAD,EAAQC,YAAR,EAAyB;AACpC,UAAIA,YAAY,CAACc,EAAb,GAAkB,CAAtB,EAAyB;AACvB,cAAKG,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAElB,YAAY,CAACc;AAAxB,SAAd;AACD;AACF,KArDkB;;AAAA,UAsDnBP,UAtDmB,GAsDN,UAACR,KAAD,EAAQC,YAAR,EAAyB;AACpC,UAAMmB,KAAK,GAAG,MAAKC,aAAL,CAAmB,MAAKC,KAAL,CAAWC,MAA9B,EAAsC,MAAK5B,KAAL,CAAW6B,UAAjD,CAAd;;AACA,UAAMC,KAAK,GAAGL,KAAK,GAAG,CAAtB;;AACA,UAAInB,YAAY,CAACc,EAAb,GAAkBU,KAAtB,EAA6B;AAC3B,cAAKC,WAAL,CAAiBxC,MAAM,CAACyC,GAAxB;AACD;AACF,KA5DkB;;AAAA,UA6EnBC,aA7EmB,GA6EH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,IADc,2DACP,EADO;AAEdC,cAAAA,KAFc,2DAEN,EAFM;AAGdC,cAAAA,OAHc,2DAGJ,EAHI;AAIdC,cAAAA,OAJc,2DAIJ,EAJI;AAKdC,cAAAA,QALc;AASPC,cAAAA,aATO,GASU,MAAKvC,KATf,CASPuC,aATO;AAWRC,cAAAA,IAXQ,GAWD;AACXN,gBAAAA,IAAI,EAAJA,IADW;AAEXC,gBAAAA,KAAK,EAAE,MAAKM,cAAL,CAAoBN,KAApB,CAFI;AAGXC,gBAAAA,OAAO,EAAE,MAAKK,cAAL,CAAoBL,OAApB,CAHE;AAIXC,gBAAAA,OAAO,EAAPA,OAJW;AAKXC,gBAAAA,QAAQ,EAAEC;AALC,eAXC;;AAmBd,kBAAID,QAAQ,IAAI,OAAOA,QAAP,KAAoB,QAApC,EAA8C;AAC5CE,gBAAAA,IAAI,CAACF,QAAL,GAAgBA,QAAhB;AACD;;AACD,oBAAKI,KAAL,CAAWC,OAAX,CAAmBH,IAAnB;;AAEA,kBAAI,MAAKI,YAAL,OAAwB,CAA5B,EAA+B;AAC7B,sBAAKC,aAAL;AACD;;AA1Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA7EG;;AAAA,UAyGnBC,UAzGmB,GAyGN,YAAM;AACjB,YAAKJ,KAAL,CAAWK,KAAX;AACD,KA3GkB;;AAAA,UA4GnBH,YA5GmB,GA4GJ,YAAM;AACnB,aAAO,MAAKF,KAAL,CAAWM,IAAlB;AACD,KA9GkB;;AAAA,UA+GnBH,aA/GmB,GA+GH,YAAM;AACpB,UAAML,IAAI,GAAG,MAAKE,KAAL,CAAWO,SAAxB;;AACA,UAAIT,IAAJ,EAAU;AACR,cAAKU,IAAL,CAAUV,IAAV;AACD;AACF,KApHkB;;AAAA,UAqHnBU,IArHmB,GAqHZ,YAAe;AAAA,UAAdV,IAAc,uEAAP,EAAO;AACpB,YAAKW,SAAL,GAAiBX,IAAjB;;AACA,YAAKjB,QAAL,CAAc;AAAC6B,QAAAA,MAAM,EAAE;AAAT,OAAd;;AACA,YAAKC,OAAL,CAAa,CAAb,EAAgB,GAAhB,EAAqB,YAAM;AACzB,YAAIb,IAAI,CAACF,QAAL,GAAgB,CAApB,EAAuB;AACrB,gBAAKgB,cAAL,CAAoBd,IAAI,CAACF,QAAzB;AACD;AACF,OAJD;AAKD,KA7HkB;;AAAA,UA8HnBP,WA9HmB,GA8HL,YAAqD;AAAA,UAApDwB,MAAoD,uEAA3ChE,MAAM,CAACiE,YAAoC;AAAA,UAAtBC,MAAsB,uEAAb,YAAM,CAAE,CAAK;;AAIjE,UAAI,MAAK9B,KAAL,CAAWyB,MAAf,EAAuB;AACrB,cAAKM,mBAAL;;AACA,cAAKC,KAAL,CAAWJ,MAAX,EAAmBE,MAAnB;AACD;AACF,KAtIkB;;AAAA,UAuInBH,cAvImB,GAuIF,UAAAhB,QAAQ,EAAI;AAC3B,YAAKoB,mBAAL;;AACA,YAAKE,cAAL,GAAsBC,UAAU,CAAC,YAAM;AACrC,cAAKF,KAAL,CAAWpE,MAAM,CAACuE,SAAlB;AACD,OAF+B,EAE7BxB,QAF6B,CAAhC;AAGD,KA5IkB;;AAAA,UA6InBqB,KA7ImB,GA6IX,UAACJ,MAAD,EAA+B;AAAA,UAAtBE,MAAsB,uEAAb,YAAM,CAAE,CAAK;;AACrC,YAAKJ,OAAL,CAAa,CAAb,EAAgB,GAAhB,EAAqB,YAAM;AACzB,2BAAoD,MAAKrD,KAAzD;AAAA,YAAO+D,OAAP,gBAAOA,OAAP;AAAA,YAAgBC,eAAhB,gBAAgBA,eAAhB;AAAA,YAAiCC,QAAjC,gBAAiCA,QAAjC;AAAA,YAA2CC,KAA3C,gBAA2CA,KAA3C;AACA,cAAKf,SAAL,CAAeI,MAAf,GAAwBA,MAAxB;;AACA,cAAKb,KAAL,CAAWyB,OAAX;;AACA,YAAIZ,MAAM,KAAKhE,MAAM,CAAC6E,MAAtB,EAA8B;AAC5BH,UAAAA,QAAQ,CAAC,MAAKd,SAAN,CAAR;AACD,SAFD,MAEO;AACL,cAAII,MAAM,KAAKhE,MAAM,CAAC8E,GAAtB,EAA2B;AACzBH,YAAAA,KAAK,CAAC,MAAKf,SAAN,CAAL;AACD;;AACDY,UAAAA,OAAO,CAAC,MAAKZ,SAAN,CAAP;AACD;;AACD,cAAK5B,QAAL,CAAc;AAAC6B,UAAAA,MAAM,EAAE,KAAT;AAAgB5B,UAAAA,QAAQ,EAAE,CAA1B;AAA6BI,UAAAA,MAAM,EAAE;AAArC,SAAd;;AACA,cAAKoC,eAAL,CAAqBA,eAArB,EAAsC,KAAtC;;AACA,cAAKnB,aAAL;;AACAY,QAAAA,MAAM;AACP,OAhBD;AAiBD,KA/JkB;;AAAA,UAgKnBO,eAhKmB,GAgKD,YAAyC;AAAA,UAAxCM,YAAwC,uEAAzB,IAAyB;AAAA,UAAnBC,MAAmB,uEAAV,KAAU;;AACzD,UAAID,YAAJ,EAAkB;AAChB,YAAIlF,UAAJ,EAAgB;AACd,6BAII,MAAKY,KAJT;AAAA,cACEwE,gCADF,gBACEA,gCADF;AAAA,cAEEC,8BAFF,gBAEEA,8BAFF;AAAA,cAGEC,WAHF,gBAGEA,WAHF;;AAKA,cAAIH,MAAJ,EAAY;AACV,gBAAII,eAAe,GAAGF,8BAAtB;AACA,gBAAMvC,IAAI,GAAG,MAAKiB,SAAL,CAAejB,IAA5B;;AACA,gBAAIA,IAAI,KAAK5C,IAAI,CAACsF,MAAlB,EAA0B;AACxBD,cAAAA,eAAe,GAAG,MAAKE,yBAAL,CAA+B3C,IAA/B,CAAlB;AACD;;AACD4C,YAAAA,SAAS,CAACC,kBAAV,CAA6BJ,eAA7B,EAA8C,IAA9C;AACAG,YAAAA,SAAS,CAACE,cAAV,CAAyBN,WAAzB;AACD,WARD,MAQO;AACLI,YAAAA,SAAS,CAACC,kBAAV,CAA6BP,gCAA7B,EAA+D,IAA/D;AACD;AACF;;AACD,2BAAuD,MAAKxE,KAA5D;AAAA,YAAOiF,sBAAP,gBAAOA,sBAAP;AAAA,YAA+BC,oBAA/B,gBAA+BA,oBAA/B;;AACA,YAAIX,MAAJ,EAAY;AACVO,UAAAA,SAAS,CAACK,WAAV,CAAsBD,oBAAtB,EAA4C,IAA5C;AACD,SAFD,MAEO;AACLJ,UAAAA,SAAS,CAACK,WAAV,CAAsBF,sBAAtB,EAA8C,IAA9C;AACD;AACF;AACF,KA3LkB;;AAAA,UA4LnBvB,mBA5LmB,GA4LG,YAAM;AAC1B,UAAI,MAAKE,cAAT,EAAyB;AACvBwB,QAAAA,YAAY,CAAC,MAAKxB,cAAN,CAAZ;AACD;AACF,KAhMkB;;AAAA,UAiMnBP,OAjMmB,GAiMT,UAACgC,OAAD,EAAoD;AAAA,UAA1CC,QAA0C,uEAA/B,GAA+B;AAAA,UAA1BC,UAA0B,uEAAb,YAAM,CAAE,CAAK;AAC5D,yBAAyC,MAAKvF,KAA9C;AAAA,UAAOwF,eAAP,gBAAOA,eAAP;AAAA,UAAwBC,aAAxB,gBAAwBA,aAAxB;AACAC,MAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAKhE,KAAL,CAAWiE,cAA3B,EAA2C;AACzCP,QAAAA,OAAO,EAAEA,OADgC;AAEzCC,QAAAA,QAAQ,EAAEA,QAF+B;AAGzCO,QAAAA,QAAQ,EAAE,CAH+B;AAIzCL,QAAAA,eAAe,EAAfA,eAJyC;AAKzCC,QAAAA,aAAa,EAAbA;AALyC,OAA3C,EAMGhE,KANH,CAMS8D,UANT;AAOD,KA1MkB;;AAAA,UA2MnB7D,aA3MmB,GA2MH,UAACE,MAAD,EAASH,KAAT,EAAmB;AACjC,UAAMqE,YAAY,GAAGtG,MAArB;AACA,UAAMuG,QAAQ,GAAG,IAAInE,MAArB;AACA,UAAMoE,QAAQ,GAAGF,YAAY,GAAGlE,MAAhC;;AACA,UAAIH,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKsE,QAA3B,EAAqC;AACnC,eAAOA,QAAP;AACD,OAFD,MAEO,IAAItE,KAAK,GAAGuE,QAAZ,EAAsB;AAC3B,eAAOA,QAAP;AACD;;AACD,aAAOvE,KAAP;AACD,KArNkB;;AAAA,UAsNnBwE,WAtNmB,GAsNL,UAACrE,MAAD,EAASsE,GAAT,EAAiB;AAC7B,UAAMJ,YAAY,GAAGtG,MAArB;AACA,UAAM2G,MAAM,GAAG,CAAf;AACA,UAAMC,MAAM,GAAGN,YAAf;;AACA,UAAII,GAAG,GAAGC,MAAV,EAAkB;AAChB,eAAOA,MAAP;AACD,OAFD,MAEO,IAAID,GAAG,IAAIE,MAAX,EAAmB;AACxB,eAAOA,MAAM,GAAGxE,MAAhB;AACD;;AACD,aAAOsE,GAAP;AACD,KAhOkB;;AAAA,UAiOnBG,cAjOmB,GAiOF,UAACzE,MAAD,EAASC,UAAT,EAAqByE,QAArB,EAAkC;AACjD,UAAI,CAAC1E,MAAL,EAAa;AACX,eAAO,CAACC,UAAD,EAAayE,QAAb,CAAP;AACD;;AACD,UAAM7E,KAAK,GAAG,MAAKC,aAAL,CAAmBE,MAAnB,EAA2BC,UAA3B,CAAd;;AACA,UAAMqE,GAAG,GAAG,MAAKD,WAAL,CAAiBrE,MAAjB,EAAyB0E,QAAzB,CAAZ;;AACA,aAAO,CAAC7E,KAAD,EAAQyE,GAAR,CAAP;AACD,KAxOkB;;AAEjB,UAAKvE,KAAL,GAAa;AACXiE,MAAAA,cAAc,EAAE,IAAIF,QAAQ,CAACa,KAAb,CAAmB,CAAnB,CADL;AAEXnD,MAAAA,MAAM,EAAE,KAFG;AAGX5B,MAAAA,QAAQ,EAAE,CAHC;AAIXI,MAAAA,MAAM,EAAE;AAJG,KAAb;AAMA,UAAKuB,SAAL,GAAiB;AACfjB,MAAAA,IAAI,EAAE,EADS;AAEfE,MAAAA,OAAO,EAAE,EAFM;AAGfD,MAAAA,KAAK,EAAE,EAHQ;AAIfE,MAAAA,OAAO,EAAE,EAJM;AAKfC,MAAAA,QAAQ,EAAEtC,KAAK,CAACuC,aALD;AAMfgB,MAAAA,MAAM,EAAE;AANO,KAAjB;AAQA,UAAKiD,YAAL,GAAoB,MAAKvG,eAAL,EAApB;AACA,UAAKyC,KAAL,GAAa,IAAI5C,KAAJ,EAAb;AAjBiB;AAkBlB;;;;WACD,gCAAuB;AACrB,UAAI,KAAK6B,KAAL,CAAWyB,MAAf,EAAuB;AACrB,aAAKrB,WAAL,CAAiBxC,MAAM,CAACiE,YAAxB;AACD;AACF;;;WAsCD,wBAAeiD,KAAf,EAAsB;AACpB,UAAI;AACF,YAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxB,mBAAOA,KAAK,CAACG,IAAN,CAAW,GAAX,CAAP;AACD;;AACD,cAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;AAC7B,wBAAUI,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAV;AACD;;AACD,sBAAUA,KAAV;AACD;;AACD,eAAOA,KAAP;AACD,OAXD,CAWE,OAAOM,KAAP,EAAc;AACd,eAAOA,KAAK,CAACC,QAAN,EAAP;AACD;AACF;;;WA6JD,yBAAgB9E,IAAhB,EAAsB;AACpB,UAAO+E,gBAAP,GAA2B,KAAKjH,KAAhC,CAAOiH,gBAAP;;AACA,cAAQ/E,IAAR;AACE,aAAK5C,IAAI,CAAC4H,IAAV;AACE,iBAAO,CACLC,UAAU,CAACC,OAAX,CAAmBH,gBAAnB,CADK,EAEL;AAACtC,YAAAA,eAAe,EAAE,KAAK3E,KAAL,CAAWqH;AAA7B,WAFK,CAAP;;AAIF,aAAK/H,IAAI,CAACgI,IAAV;AACE,iBAAO,CACLH,UAAU,CAACC,OAAX,CAAmBH,gBAAnB,CADK,EAEL;AAACtC,YAAAA,eAAe,EAAE,KAAK3E,KAAL,CAAWuH;AAA7B,WAFK,CAAP;;AAIF,aAAKjI,IAAI,CAACyH,KAAV;AACE,iBAAO,CACLI,UAAU,CAACC,OAAX,CAAmBH,gBAAnB,CADK,EAEL;AAACtC,YAAAA,eAAe,EAAE,KAAK3E,KAAL,CAAWwH;AAA7B,WAFK,CAAP;;AAIF,aAAKlI,IAAI,CAACmI,OAAV;AACE,iBAAO,CACLN,UAAU,CAACC,OAAX,CAAmBH,gBAAnB,CADK,EAEL;AAACtC,YAAAA,eAAe,EAAE,KAAK3E,KAAL,CAAW0H;AAA7B,WAFK,CAAP;;AAIF;AACE,iBAAO,CACLP,UAAU,CAACC,OAAX,CAAmBH,gBAAnB,CADK,EAELE,UAAU,CAACC,OAAX,CAAmB,KAAKpH,KAAL,CAAW2H,cAA9B,CAFK,CAAP;AAtBJ;AA2BD;;;WACD,0BAAiBzF,IAAjB,EAAuB;AACrB,cAAQA,IAAR;AACE,aAAK5C,IAAI,CAAC4H,IAAV;AACE,iBAAO,KAAKlH,KAAL,CAAW4H,YAAlB;;AACF,aAAKtI,IAAI,CAACgI,IAAV;AACE,iBAAO,KAAKtH,KAAL,CAAW6H,YAAlB;;AACF,aAAKvI,IAAI,CAACyH,KAAV;AACE,iBAAO,KAAK/G,KAAL,CAAW8H,aAAlB;;AACF,aAAKxI,IAAI,CAACmI,OAAV;AACE,iBAAO,KAAKzH,KAAL,CAAW+H,eAAlB;;AACF;AACE,iBAAO,KAAK/H,KAAL,CAAWgI,QAAlB;AAVJ;AAYD;;;WACD,mCAA0B9F,IAA1B,EAAgC;AAC9B,cAAQA,IAAR;AACE,aAAK5C,IAAI,CAAC4H,IAAV;AACE,iBAAO,KAAKlH,KAAL,CAAWqH,SAAlB;;AACF,aAAK/H,IAAI,CAACgI,IAAV;AACE,iBAAO,KAAKtH,KAAL,CAAWuH,SAAlB;;AACF,aAAKjI,IAAI,CAACyH,KAAV;AACE,iBAAO,KAAK/G,KAAL,CAAWwH,UAAlB;;AACF,aAAKlI,IAAI,CAACmI,OAAV;AACE,iBAAO,KAAKzH,KAAL,CAAW0H,YAAlB;;AACF;AACE,iBAAO,KAAK1H,KAAL,CAAW2H,cAAX,CAA0BhD,eAAjC;AAVJ;AAYD;;;WACD,wBAAetE,KAAf,EAAsB;AACpB,UAAOuB,MAAP,GAAiBvB,KAAK,CAAC4H,WAAN,CAAkBC,MAAnC,CAAOtG,MAAP;;AACA,UAAIA,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB,EAAgC;AAC9B,2BAA+B,KAAK5B,KAApC;AAAA,YAAO6B,UAAP,gBAAOA,UAAP;AAAA,YAAmByE,QAAnB,gBAAmBA,QAAnB;AACA,YAAM7E,KAAK,GAAG,KAAKC,aAAL,CAAmBE,MAAnB,EAA2BC,UAA3B,CAAd;AACA,YAAMqE,GAAG,GAAG,KAAKD,WAAL,CAAiBrE,MAAjB,EAAyB0E,QAAzB,CAAZ;;AACA,YAAIzE,UAAU,KAAKJ,KAAf,IAAwB6E,QAAQ,KAAKJ,GAAzC,EAA8C;AAC5C,eAAK3E,QAAL,CAAc;AAACK,YAAAA,MAAM,EAANA;AAAD,WAAd;AACD;AACF;AACF;;;WACD,sBAAauG,MAAb,EAAqB;AACnB,UAAI,KAAKnI,KAAL,CAAWoI,WAAf,EAA4B;AAC1B,eAAO,KAAKpI,KAAL,CAAWoI,WAAX,CAAuB,KAAKpI,KAA5B,EAAmC,KAAKmD,SAAxC,CAAP;AACD;;AACD,aACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEgE,UAAU,CAACC,OAAX,CAAmB,KAAKpH,KAAL,CAAWqI,UAA9B,CADT;AAEE,QAAA,MAAM,EAAEF,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;;;WACD,wBAAe;AACb,UAAI,KAAKnI,KAAL,CAAWsI,WAAf,EAA4B;AAC1B,eAAO,KAAKtI,KAAL,CAAWsI,WAAX,CAAuB,KAAKtI,KAA5B,EAAmC,KAAKmD,SAAxC,CAAP;AACD;;AACD,yBAAsD,KAAKnD,KAA3D;AAAA,UAAOuI,cAAP,gBAAOA,cAAP;AAAA,UAAuBC,UAAvB,gBAAuBA,UAAvB;AAAA,UAAmCC,eAAnC,gBAAmCA,eAAnC;AACA,aACE,oBAAC,QAAD,eACMF,cADN;AAEE,QAAA,KAAK,EAAEpB,UAAU,CAACC,OAAX,CAAmBoB,UAAnB,CAFT;AAGE,QAAA,aAAa,EAAEC,eAHjB;AAIE,QAAA,IAAI,EAAE,KAAKtF,SAAL,CAAehB,KAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQD;;;WACD,0BAAiB;AACf,UAAI,KAAKnC,KAAL,CAAW0I,aAAf,EAA8B;AAC5B,eAAO,KAAK1I,KAAL,CAAW0I,aAAX,CAAyB,KAAK1I,KAA9B,EAAqC,KAAKmD,SAA1C,CAAP;AACD;;AACD,yBAA4D,KAAKnD,KAAjE;AAAA,UAAO2I,gBAAP,gBAAOA,gBAAP;AAAA,UAAyBC,YAAzB,gBAAyBA,YAAzB;AAAA,UAAuCC,iBAAvC,gBAAuCA,iBAAvC;AACA,aACE,oBAAC,QAAD,eACMF,gBADN;AAEE,QAAA,KAAK,EAAExB,UAAU,CAACC,OAAX,CAAmBwB,YAAnB,CAFT;AAGE,QAAA,aAAa,EAAEC,iBAHjB;AAIE,QAAA,IAAI,EAAE,KAAK1F,SAAL,CAAef,OAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQD;;;WACD,yBAA4B;AAAA;;AAAA,UAAd0G,IAAc,uEAAP,KAAO;;AAC1B,UAAI,CAACA,IAAL,EAAW;AACT,eAAO,IAAP;AACD;;AACD,UAAI,KAAK9I,KAAL,CAAW+I,YAAf,EAA6B;AAC3B,eAAO,KAAK/I,KAAL,CAAW+I,YAAX,CAAwB,KAAK/I,KAA7B,EAAoC,KAAKmD,SAAzC,CAAP;AACD,OAFD,MAEO;AACL,2BAAiD,KAAKnD,KAAtD;AAAA,YAAOgJ,iBAAP,gBAAOA,iBAAP;AAAA,YAA0BC,mBAA1B,gBAA0BA,mBAA1B;AACA,eACE,oBAAC,YAAD;AACE,UAAA,UAAU,EAAEA,mBADd;AAEE,UAAA,QAAQ,EAAED,iBAFZ;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACjH,WAAL,CAAiBxC,MAAM,CAAC6E,MAAxB,CAAN;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;AACF;;;WACD,kBAAS;AAAA;;AACP,UAAOhB,MAAP,GAAiB,KAAKzB,KAAtB,CAAOyB,MAAP;;AACA,UAAI,CAACA,MAAL,EAAa;AACX,eAAO,IAAP;AACD;;AACD,0BAeI,KAAKpD,KAfT;AAAA,UACEkJ,SADF,iBACEA,SADF;AAAA,UAEEC,MAFF,iBAEEA,MAFF;AAAA,UAGEC,YAHF,iBAGEA,YAHF;AAAA,UAIEC,iBAJF,iBAIEA,iBAJF;AAAA,UAKEC,kBALF,iBAKEA,kBALF;AAAA,UAMEC,MANF,iBAMEA,MANF;AAAA,UAOEC,UAPF,iBAOEA,UAPF;AAAA,UAQEC,qBARF,iBAQEA,qBARF;AAAA,UASEC,oBATF,iBASEA,oBATF;AAAA,UAUE7H,UAVF,iBAUEA,UAVF;AAAA,UAWEyE,QAXF,iBAWEA,QAXF;AAAA,UAYE5B,WAZF,iBAYEA,WAZF;AAAA,UAaEV,eAbF,iBAaEA,eAbF;AAAA,UAcE2F,UAdF,iBAcEA,UAdF;AAgBA,wBAA2C,KAAKhI,KAAhD;AAAA,UAAOiE,cAAP,eAAOA,cAAP;AAAA,UAAuBpE,QAAvB,eAAuBA,QAAvB;AAAA,UAAiCI,MAAjC,eAAiCA,MAAjC;AACA,4BAAwB,KAAKuB,SAA7B;AAAA,UAAOjB,IAAP,mBAAOA,IAAP;AAAA,UAAaG,OAAb,mBAAaA,OAAb;AACA,UAAIuH,KAAK,GAAG,KAAKC,eAAL,CAAqB3H,IAArB,CAAZ;AACA,UAAI8F,QAAQ,GAAG,KAAK8B,gBAAL,CAAsB5H,IAAtB,CAAf;;AAGA,UACEG,OAAO,IACPA,OAAO,CAAC0H,cAAR,CAAuB,QAAvB,CADA,IAEA1H,OAAO,CAAC8F,MAFR,IAGA,OAAO9F,OAAO,CAAC8F,MAAf,KAA0B,QAJ5B,EAKE;AACAH,QAAAA,QAAQ,GAAG3F,OAAO,CAAC8F,MAAnB;AACD;;AACD,UAAI/I,UAAU,IAAIsF,WAAlB,EAA+B;AAC7BkF,QAAAA,KAAK,GAAG,CAACA,KAAD,EAAQ;AAACI,UAAAA,UAAU,EAAElF,SAAS,CAACmF;AAAvB,SAAR,CAAR;AACD;;AACD,WAAKjG,eAAL,CAAqBA,eAArB,EAAsC,IAAtC;AACA,UAAMkG,WAAW,GAAG,KAAK7D,cAAL,CAAoBzE,MAApB,EAA4BC,UAA5B,EAAwCyE,QAAxC,CAApB;AACA,UAAI6D,gBAAgB,GAAG;AACrBC,QAAAA,SAAS,EAAE,CACT;AACEC,UAAAA,UAAU,EAAEzE,cAAc,CAAC0E,WAAf,CAA2B;AACrCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADyB;AAErCL,YAAAA,WAAW,EAAXA;AAFqC,WAA3B;AADd,SADS,CADU;AASrBM,QAAAA,QAAQ,EAAE,UATW;AAUrBC,QAAAA,GAAG,EAAEjJ,QAVgB;AAWrBkJ,QAAAA,IAAI,EAAE,CAXe;AAYrBC,QAAAA,KAAK,EAAE,CAZc;AAarBzB,QAAAA,SAAS,EAAEA;AAbU,OAAvB;;AAeA,UAAIC,MAAM,IAAI,IAAd,EAAoB;AAClBgB,QAAAA,gBAAgB,CAAChB,MAAjB,GAA0BA,MAA1B;AACD;;AACD,UAAIyB,WAAW,GAAGC,YAAlB;;AACA,UAAIxL,eAAe,IAAID,UAAvB,EAAmC;AACjCwL,QAAAA,WAAW,GAAGE,IAAd;AACD;;AACD,UAAMC,aAAa,GAAG,CAAC1B,iBAAD,IAAsBM,UAAtB,GAAmC,CAAnC,GAAuC,IAA7D;AACA,UAAMqB,OAAO,GAAG,CAAC3B,iBAAD,GACZ,IADY,GAEZ;AAAA,eAAM,MAAI,CAACtH,WAAL,CAAiBxC,MAAM,CAAC8E,GAAxB,CAAN;AAAA,OAFJ;AAGA,aACE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,GAAG,EAAE,aAAA4G,IAAG;AAAA,iBAAK,MAAI,CAACC,QAAL,GAAgBD,IAArB;AAAA;AADV,SAEM,KAAKzE,YAAL,CAAkB2E,WAFxB;AAGE,QAAA,KAAK,EAAE,CAAChB,gBAAD,EAAmBf,YAAnB,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIE,oBAAC,gBAAD;AACE,QAAA,aAAa,EAAE2B,aADjB;AAEE,QAAA,OAAO,EAAEC,OAFX;AAGE,QAAA,QAAQ,EAAE,CAAC3B,iBAHb;AAIE,QAAA,QAAQ,EAAE,kBAAAhJ,KAAK;AAAA,iBAAI,MAAI,CAAC+K,cAAL,CAAoB/K,KAApB,CAAJ;AAAA,SAJjB;AAKE,QAAA,MAAM,EAAEkJ,MALV;AAME,QAAA,kBAAkB,EAAED,kBANtB;AAOE,QAAA,UAAU,EAAEE,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAEzC,UAAU,CAACC,OAAX,CAAmBqC,qBAAnB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK4B,YAAL,CAAkBrD,QAAlB,CADH,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,UAAU,CAACC,OAAX,CAAmBsC,oBAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK4B,YAAL,EADH,EAEG,KAAKC,cAAL,EAFH,CAFF,CADF,EAQG,KAAKC,aAAL,CAAmB7B,UAAnB,CARH,CARF,CAJF,CADF;AA0BD;;;;EA3mBwC1K,S;;AAAtBc,a,CACZ0L,S,GAAY;AACjBzD,EAAAA,QAAQ,EAAE9I,SAAS,CAACwM,SAAV,CAAoB,CAACxM,SAAS,CAACyM,MAAX,EAAmBzM,SAAS,CAAC0M,MAA7B,CAApB,CADO;AAEjBhE,EAAAA,YAAY,EAAE1I,SAAS,CAACwM,SAAV,CAAoB,CAChCxM,SAAS,CAACyM,MADsB,EAEhCzM,SAAS,CAAC0M,MAFsB,EAGhC1M,SAAS,CAAC2M,MAHsB,CAApB,CAFG;AAOjBhE,EAAAA,YAAY,EAAE3I,SAAS,CAACwM,SAAV,CAAoB,CAChCxM,SAAS,CAACyM,MADsB,EAEhCzM,SAAS,CAAC0M,MAFsB,EAGhC1M,SAAS,CAAC2M,MAHsB,CAApB,CAPG;AAYjB/D,EAAAA,aAAa,EAAE5I,SAAS,CAACwM,SAAV,CAAoB,CACjCxM,SAAS,CAACyM,MADuB,EAEjCzM,SAAS,CAAC0M,MAFuB,EAGjC1M,SAAS,CAAC2M,MAHuB,CAApB,CAZE;AAiBjB9D,EAAAA,eAAe,EAAE7I,SAAS,CAACwM,SAAV,CAAoB,CACnCxM,SAAS,CAACyM,MADyB,EAEnCzM,SAAS,CAAC0M,MAFyB,EAGnC1M,SAAS,CAAC2M,MAHyB,CAApB,CAjBA;AAsBjB7C,EAAAA,iBAAiB,EAAE9J,SAAS,CAACwM,SAAV,CAAoB,CACrCxM,SAAS,CAACyM,MAD2B,EAErCzM,SAAS,CAAC0M,MAF2B,EAGrC1M,SAAS,CAAC2M,MAH2B,CAApB,CAtBF;AA2BjBxE,EAAAA,SAAS,EAAEnI,SAAS,CAACyM,MA3BJ;AA4BjBpE,EAAAA,SAAS,EAAErI,SAAS,CAACyM,MA5BJ;AA6BjBnE,EAAAA,UAAU,EAAEtI,SAAS,CAACyM,MA7BL;AA8BjBjE,EAAAA,YAAY,EAAExI,SAAS,CAACyM,MA9BP;AA+BjBpJ,EAAAA,aAAa,EAAErD,SAAS,CAAC0M,MA/BR;AAgCjB/J,EAAAA,UAAU,EAAE3C,SAAS,CAAC0M,MAhCL;AAiCjBtF,EAAAA,QAAQ,EAAEpH,SAAS,CAAC0M,MAjCH;AAkCjBxC,EAAAA,YAAY,EAAElK,SAAS,CAACwM,SAAV,CAAoB,CAACxM,SAAS,CAAC2M,MAAX,EAAmB3M,SAAS,CAAC0M,MAA7B,CAApB,CAlCG;AAmCjBjE,EAAAA,cAAc,EAAEzI,SAAS,CAACwM,SAAV,CAAoB,CAACxM,SAAS,CAAC2M,MAAX,EAAmB3M,SAAS,CAAC0M,MAA7B,CAApB,CAnCC;AAoCjBnC,EAAAA,qBAAqB,EAAEvK,SAAS,CAACwM,SAAV,CAAoB,CACzCxM,SAAS,CAAC2M,MAD+B,EAEzC3M,SAAS,CAAC0M,MAF+B,CAApB,CApCN;AAwCjBpD,EAAAA,UAAU,EAAEtJ,SAAS,CAACwM,SAAV,CAAoB,CAACxM,SAAS,CAAC2M,MAAX,EAAmB3M,SAAS,CAAC0M,MAA7B,CAApB,CAxCK;AAyCjBhD,EAAAA,YAAY,EAAE1J,SAAS,CAACwM,SAAV,CAAoB,CAACxM,SAAS,CAAC2M,MAAX,EAAmB3M,SAAS,CAAC0M,MAA7B,CAApB,CAzCG;AA0CjBvD,EAAAA,UAAU,EAAEnJ,SAAS,CAACwM,SAAV,CAAoB,CAACxM,SAAS,CAAC2M,MAAX,EAAmB3M,SAAS,CAAC0M,MAA7B,CAApB,CA1CK;AA2CjB3C,EAAAA,mBAAmB,EAAE/J,SAAS,CAACwM,SAAV,CAAoB,CACvCxM,SAAS,CAAC2M,MAD6B,EAEvC3M,SAAS,CAAC0M,MAF6B,CAApB,CA3CJ;AA+CjBnD,EAAAA,eAAe,EAAEvJ,SAAS,CAAC0M,MA/CV;AAgDjB/C,EAAAA,iBAAiB,EAAE3J,SAAS,CAAC0M,MAhDZ;AAiDjB7H,EAAAA,OAAO,EAAE7E,SAAS,CAAC4M,IAjDF;AAkDjB7H,EAAAA,QAAQ,EAAE/E,SAAS,CAAC4M,IAlDH;AAmDjBnC,EAAAA,UAAU,EAAEzK,SAAS,CAAC6M,IAnDL;AAoDjB1C,EAAAA,iBAAiB,EAAEnK,SAAS,CAAC6M,IApDZ;AAqDjBhL,EAAAA,mBAAmB,EAAE7B,SAAS,CAAC6M,IArDd;AAsDjBrH,EAAAA,WAAW,EAAExF,SAAS,CAAC6M,IAtDN;AAuDjBvG,EAAAA,eAAe,EAAEtG,SAAS,CAAC6M,IAvDV;AAwDjBtG,EAAAA,aAAa,EAAEvG,SAAS,CAAC6M,IAxDR;AAyDjB7G,EAAAA,oBAAoB,EAAEhG,SAAS,CAACyM,MAzDf;AA0DjBlH,EAAAA,8BAA8B,EAAEvF,SAAS,CAACyM,MA1DzB;AA2DjB1G,EAAAA,sBAAsB,EAAE/F,SAAS,CAACyM,MA3DjB;AA4DjBnH,EAAAA,gCAAgC,EAAEtF,SAAS,CAACyM,MA5D3B;AA6DjB3H,EAAAA,eAAe,EAAE9E,SAAS,CAAC6M,IA7DV;AA8DjB7C,EAAAA,SAAS,EAAEhK,SAAS,CAAC0M,MA9DJ;AA+DjBzC,EAAAA,MAAM,EAAEjK,SAAS,CAAC0M,MA/DD;AAgEjB5K,EAAAA,WAAW,EAAE9B,SAAS,CAAC0M,MAhEN;AAiEjB3E,EAAAA,gBAAgB,EAAE/H,SAAS,CAACwM,SAAV,CAAoB,CAACxM,SAAS,CAAC2M,MAAX,EAAmB3M,SAAS,CAAC0M,MAA7B,CAApB,CAjED;AAkEjBlC,EAAAA,oBAAoB,EAAExK,SAAS,CAACwM,SAAV,CAAoB,CACxCxM,SAAS,CAAC2M,MAD8B,EAExC3M,SAAS,CAAC0M,MAF8B,CAApB,CAlEL;AAsEjBxD,EAAAA,WAAW,EAAElJ,SAAS,CAAC4M,IAtEN;AAuEjB/C,EAAAA,YAAY,EAAE7J,SAAS,CAAC4M,IAvEP;AAwEjBxD,EAAAA,WAAW,EAAEpJ,SAAS,CAAC4M,IAxEN;AAyEjBpD,EAAAA,aAAa,EAAExJ,SAAS,CAAC4M,IAzER;AA0EjBvC,EAAAA,MAAM,EAAErK,SAAS,CAACyM,MA1ED;AA2EjBrC,EAAAA,kBAAkB,EAAEpK,SAAS,CAACyM,MA3Eb;AA4EjBnC,EAAAA,UAAU,EAAEtK,SAAS,CAAC6M,IA5EL;AA6EjBxD,EAAAA,cAAc,EAAErJ,SAAS,CAAC2M,MA7ET;AA8EjBlD,EAAAA,gBAAgB,EAAEzJ,SAAS,CAAC2M,MA9EX;AA+EjB3H,EAAAA,KAAK,EAAEhF,SAAS,CAAC4M;AA/EA,C;AADA/L,a,CAkFZiM,Y,GAAe;AACpBjI,EAAAA,OAAO,EAAE,mBAAM,CAAE,CADG;AAEpBE,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAFE;AAGpB1B,EAAAA,aAAa,EAAE,IAHK;AAIpBV,EAAAA,UAAU,EAAE,CAAC,GAJO;AAKpByE,EAAAA,QAAQ,EAAE,CALU;AAMpBmC,EAAAA,eAAe,EAAE,CANG;AAOpBI,EAAAA,iBAAiB,EAAE,CAPC;AAQpBb,EAAAA,QAAQ,EAAE,IARU;AASpBJ,EAAAA,YAAY,EAAEqE,OAAO,qBATD;AAUpBpE,EAAAA,YAAY,EAAEoE,OAAO,qBAVD;AAWpBnE,EAAAA,aAAa,EAAEmE,OAAO,sBAXF;AAYpBlE,EAAAA,eAAe,EAAEkE,OAAO,wBAZJ;AAapBjD,EAAAA,iBAAiB,EAAEiD,OAAO,uBAbN;AAcpB5E,EAAAA,SAAS,EAAE,SAdS;AAepBE,EAAAA,SAAS,EAAE,SAfS;AAgBpBC,EAAAA,UAAU,EAAE,SAhBQ;AAiBpBE,EAAAA,YAAY,EAAE,SAjBM;AAkBpBiC,EAAAA,UAAU,EAAE,KAlBQ;AAmBpBN,EAAAA,iBAAiB,EAAE,IAnBC;AAoBpBtI,EAAAA,mBAAmB,EAAE,IApBD;AAqBpBqI,EAAAA,YAAY,EAAE,IArBM;AAsBpBzB,EAAAA,cAAc,EAAE;AACduE,IAAAA,OAAO,EAAE,EADK;AAEdC,IAAAA,aAAa,EAAE,KAFD;AAGdxH,IAAAA,eAAe,EAAE;AAHH,GAtBI;AA2BpB8E,EAAAA,qBAAqB,EAAE;AACrB2C,IAAAA,IAAI,EAAE,CADe;AAErBD,IAAAA,aAAa,EAAE;AAFM,GA3BH;AA+BpB3D,EAAAA,UAAU,EAAE;AACV6D,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,SAAS,EAAE,MAFD;AAGVC,IAAAA,UAAU,EAAE,MAHF;AAIVC,IAAAA,KAAK,EAAE,OAJG;AAKV7H,IAAAA,eAAe,EAAE;AALP,GA/BQ;AAsCpBiE,EAAAA,YAAY,EAAE;AACZyD,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,SAAS,EAAE,MAFC;AAGZC,IAAAA,UAAU,EAAE,QAHA;AAIZC,IAAAA,KAAK,EAAE,OAJK;AAKZ7H,IAAAA,eAAe,EAAE;AALL,GAtCM;AA6CpB0D,EAAAA,UAAU,EAAE;AACV6D,IAAAA,OAAO,EAAE,CADC;AAEVO,IAAAA,KAAK,EAAEtN,wBAFG;AAGVyC,IAAAA,MAAM,EAAEzC,wBAHE;AAIVuN,IAAAA,SAAS,EAAE;AAJD,GA7CQ;AAmDpBzD,EAAAA,mBAAmB,EAAE;AACnBiD,IAAAA,OAAO,EAAE,CADU;AAEnBO,IAAAA,KAAK,EAAEtN,wBAFY;AAGnByC,IAAAA,MAAM,EAAEzC,wBAHW;AAInBuN,IAAAA,SAAS,EAAE;AAJQ,GAnDD;AAyDpBzF,EAAAA,gBAAgB,EAAE;AAChBiF,IAAAA,OAAO,EAAE,CADO;AAEhBC,IAAAA,aAAa,EAAE;AAFC,GAzDE;AA6DpBzC,EAAAA,oBAAoB,EAAE;AACpB0C,IAAAA,IAAI,EAAE,CADc;AAEpBF,IAAAA,OAAO,EAAE;AAFW,GA7DF;AAiEpBxH,EAAAA,WAAW,EAAE,KAjEO;AAkEpBQ,EAAAA,oBAAoB,EAAE,eAlEF;AAmEpBT,EAAAA,8BAA8B,EAAE/E,kCAAkC,EAnE9C;AAoEpBuF,EAAAA,sBAAsB,EAAExF,wBAAwB,EApE5B;AAqEpB+E,EAAAA,gCAAgC,EAAE9E,kCAAkC,EArEhD;AAsEpBsE,EAAAA,eAAe,EAAE,IAtEG;AAuEpByB,EAAAA,aAAa,EAAE,IAvEK;AAwEpBD,EAAAA,eAAe,EAAE,IAxEG;AAyEpB0D,EAAAA,SAAS,EAAE,CAzES;AA0EpBC,EAAAA,MAAM,EAAE,IA1EY;AA2EpBnI,EAAAA,WAAW,EAAE,EA3EO;AA4EpBoH,EAAAA,WAAW,EAAEuE,SA5EO;AA6EpB5D,EAAAA,YAAY,EAAE4D,SA7EM;AA8EpBrE,EAAAA,WAAW,EAAEqE,SA9EO;AA+EpBjE,EAAAA,aAAa,EAAEiE,SA/EK;AAgFpBpD,EAAAA,MAAM,EAAEoD,SAhFY;AAiFpBrD,EAAAA,kBAAkB,EAAEqD,SAjFA;AAkFpBnD,EAAAA,UAAU,EAAE,KAlFQ;AAmFpBjB,EAAAA,cAAc,EAAEoE,SAnFI;AAoFpBhE,EAAAA,gBAAgB,EAAEgE,SApFE;AAqFpBzI,EAAAA,KAAK,EAAE,iBAAM,CAAE;AArFK,C;SAlFHnE,a","sourcesContent":["import React, {Component} from 'react';\nimport {\n  StyleSheet,\n  SafeAreaView,\n  View,\n  TouchableOpacity,\n  Animated,\n  StatusBar,\n  PanResponder,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport {\n  DEFAULT_IMAGE_DIMENSIONS,\n  IS_ANDROID,\n  IS_IOS_BELOW_11,\n  TYPE,\n  ACTION,\n  HEIGHT,\n  getDefaultStatusBarStyle,\n  getDefaultStatusBarBackgroundColor,\n} from './constants';\nimport TextView from './TextView';\nimport ImageView from './imageview';\nimport CancelButton from './CancelButton';\nimport Queue from './Queue';\n\nexport default class DropdownAlert extends Component {\n  static propTypes = {\n    imageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    infoImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    warnImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    errorImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    successImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    cancelBtnImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    infoColor: PropTypes.string,\n    warnColor: PropTypes.string,\n    errorColor: PropTypes.string,\n    successColor: PropTypes.string,\n    closeInterval: PropTypes.number,\n    startDelta: PropTypes.number,\n    endDelta: PropTypes.number,\n    wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    contentContainerStyle: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.number,\n    ]),\n    titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    messageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    imageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    cancelBtnImageStyle: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.number,\n    ]),\n    titleNumOfLines: PropTypes.number,\n    messageNumOfLines: PropTypes.number,\n    onClose: PropTypes.func,\n    onCancel: PropTypes.func,\n    showCancel: PropTypes.bool,\n    tapToCloseEnabled: PropTypes.bool,\n    panResponderEnabled: PropTypes.bool,\n    translucent: PropTypes.bool,\n    useNativeDriver: PropTypes.bool,\n    isInteraction: PropTypes.bool,\n    activeStatusBarStyle: PropTypes.string,\n    activeStatusBarBackgroundColor: PropTypes.string,\n    inactiveStatusBarStyle: PropTypes.string,\n    inactiveStatusBarBackgroundColor: PropTypes.string,\n    updateStatusBar: PropTypes.bool,\n    elevation: PropTypes.number,\n    zIndex: PropTypes.number,\n    sensitivity: PropTypes.number,\n    defaultContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    defaultTextContainer: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.number,\n    ]),\n    renderImage: PropTypes.func,\n    renderCancel: PropTypes.func,\n    renderTitle: PropTypes.func,\n    renderMessage: PropTypes.func,\n    testID: PropTypes.string,\n    accessibilityLabel: PropTypes.string,\n    accessible: PropTypes.bool,\n    titleTextProps: PropTypes.object,\n    messageTextProps: PropTypes.object,\n    onTap: PropTypes.func,\n  };\n  static defaultProps = {\n    onClose: () => {},\n    onCancel: () => {},\n    closeInterval: 4000,\n    startDelta: -100,\n    endDelta: 0,\n    titleNumOfLines: 1,\n    messageNumOfLines: 3,\n    imageSrc: null,\n    infoImageSrc: require('./assets/info.png'),\n    warnImageSrc: require('./assets/warn.png'),\n    errorImageSrc: require('./assets/error.png'),\n    successImageSrc: require('./assets/success.png'),\n    cancelBtnImageSrc: require('./assets/cancel.png'),\n    infoColor: '#2B73B6',\n    warnColor: '#cd853f',\n    errorColor: '#cc3232',\n    successColor: '#32A54A',\n    showCancel: false,\n    tapToCloseEnabled: true,\n    panResponderEnabled: true,\n    wrapperStyle: null,\n    containerStyle: {\n      padding: 16,\n      flexDirection: 'row',\n      backgroundColor: '#202020',\n    },\n    contentContainerStyle: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    titleStyle: {\n      fontSize: 16,\n      textAlign: 'left',\n      fontWeight: 'bold',\n      color: 'white',\n      backgroundColor: 'transparent',\n    },\n    messageStyle: {\n      fontSize: 14,\n      textAlign: 'left',\n      fontWeight: 'normal',\n      color: 'white',\n      backgroundColor: 'transparent',\n    },\n    imageStyle: {\n      padding: 8,\n      width: DEFAULT_IMAGE_DIMENSIONS,\n      height: DEFAULT_IMAGE_DIMENSIONS,\n      alignSelf: 'center',\n    },\n    cancelBtnImageStyle: {\n      padding: 8,\n      width: DEFAULT_IMAGE_DIMENSIONS,\n      height: DEFAULT_IMAGE_DIMENSIONS,\n      alignSelf: 'center',\n    },\n    defaultContainer: {\n      padding: 8,\n      flexDirection: 'row',\n    },\n    defaultTextContainer: {\n      flex: 1,\n      padding: 8,\n    },\n    translucent: false,\n    activeStatusBarStyle: 'light-content',\n    activeStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n    inactiveStatusBarStyle: getDefaultStatusBarStyle(),\n    inactiveStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n    updateStatusBar: true,\n    isInteraction: true,\n    useNativeDriver: true,\n    elevation: 1,\n    zIndex: null,\n    sensitivity: 20,\n    renderImage: undefined,\n    renderCancel: undefined,\n    renderTitle: undefined,\n    renderMessage: undefined,\n    testID: undefined,\n    accessibilityLabel: undefined,\n    accessible: false,\n    titleTextProps: undefined,\n    messageTextProps: undefined,\n    onTap: () => {},\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      animationValue: new Animated.Value(0),\n      isOpen: false,\n      topValue: 0,\n      height: 0,\n    };\n    this.alertData = {\n      type: '',\n      message: '',\n      title: '',\n      payload: {},\n      interval: props.closeInterval,\n      action: '',\n    };\n    this.panResponder = this.getPanResponder();\n    this.queue = new Queue();\n  }\n  componentWillUnmount() {\n    if (this.state.isOpen) {\n      this.closeAction(ACTION.programmatic);\n    }\n  }\n  getPanResponder = () => {\n    return PanResponder.create({\n      onStartShouldSetPanResponder: (event, gestureState) =>\n        this._onShouldStartPan(event, gestureState),\n      onMoveShouldSetPanResponder: (event, gestureState) =>\n        this._onShouldMovePan(event, gestureState),\n      onPanResponderMove: (event, gestureState) =>\n        this._onMovePan(event, gestureState),\n      onPanResponderRelease: (event, gestureState) =>\n        this._onDonePan(event, gestureState),\n      onPanResponderTerminate: (event, gestureState) =>\n        this._onDonePan(event, gestureState),\n    });\n  };\n  _onShouldStartPan = (event, gestureState) => {\n    return this.props.panResponderEnabled;\n  };\n  _onShouldMovePan = (event, gestureState) => {\n    const {sensitivity, panResponderEnabled} = this.props;\n    const dx = Math.abs(gestureState.dx);\n    const dy = Math.abs(gestureState.dy);\n    const isDxSensitivity = dx < sensitivity;\n    const isDySensitivity = dy >= sensitivity;\n    return isDxSensitivity && isDySensitivity && panResponderEnabled;\n  };\n  _onMovePan = (event, gestureState) => {\n    if (gestureState.dy < 0) {\n      this.setState({topValue: gestureState.dy});\n    }\n  };\n  _onDonePan = (event, gestureState) => {\n    const start = this.getStartDelta(this.state.height, this.props.startDelta);\n    const delta = start / 5;\n    if (gestureState.dy < delta) {\n      this.closeAction(ACTION.pan);\n    }\n  };\n  getStringValue(value) {\n    try {\n      if (typeof value !== 'string') {\n        if (Array.isArray(value)) {\n          return value.join(' ');\n        }\n        if (typeof value === 'object') {\n          return `${JSON.stringify(value)}`;\n        }\n        return `${value}`;\n      }\n      return value;\n    } catch (error) {\n      return error.toString();\n    }\n  }\n  alertWithType = async (\n    type = '',\n    title = '',\n    message = '',\n    payload = {},\n    interval,\n  ) => {\n    // type is not validated so unexpected types will render alert with default styles.\n    // these default styles can be overridden with style props. (for example, containerStyle)\n    const {closeInterval} = this.props;\n    // title and message are converted to strings\n    const data = {\n      type,\n      title: this.getStringValue(title),\n      message: this.getStringValue(message),\n      payload,\n      interval: closeInterval,\n    };\n    // closeInterval prop is overridden if interval is provided\n    if (interval && typeof interval === 'number') {\n      data.interval = interval;\n    }\n    this.queue.enqueue(data);\n    // start processing queue when it has at least one\n    if (this.getQueueSize() === 1) {\n      this._processQueue();\n    }\n  };\n  clearQueue = () => {\n    this.queue.clear();\n  };\n  getQueueSize = () => {\n    return this.queue.size;\n  };\n  _processQueue = () => {\n    const data = this.queue.firstItem;\n    if (data) {\n      this.open(data);\n    }\n  };\n  open = (data = {}) => {\n    this.alertData = data;\n    this.setState({isOpen: true});\n    this.animate(1, 450, () => {\n      if (data.interval > 0) {\n        this.closeAutomatic(data.interval);\n      }\n    });\n  };\n  closeAction = (action = ACTION.programmatic, onDone = () => {}) => {\n    // action is how the alert was closed.\n    // alert currently closes itself by:\n    // tap, pan, cancel, programmatic or automatic\n    if (this.state.isOpen) {\n      this.clearCloseTimeoutID();\n      this.close(action, onDone);\n    }\n  };\n  closeAutomatic = interval => {\n    this.clearCloseTimeoutID();\n    this.closeTimeoutID = setTimeout(() => {\n      this.close(ACTION.automatic);\n    }, interval);\n  };\n  close = (action, onDone = () => {}) => {\n    this.animate(0, 250, () => {\n      const {onClose, updateStatusBar, onCancel, onTap} = this.props;\n      this.alertData.action = action;\n      this.queue.dequeue();\n      if (action === ACTION.cancel) {\n        onCancel(this.alertData);\n      } else {\n        if (action === ACTION.tap) {\n          onTap(this.alertData);\n        }\n        onClose(this.alertData);\n      }\n      this.setState({isOpen: false, topValue: 0, height: 0});\n      this.updateStatusBar(updateStatusBar, false);\n      this._processQueue();\n      onDone();\n    });\n  };\n  updateStatusBar = (shouldUpdate = true, active = false) => {\n    if (shouldUpdate) {\n      if (IS_ANDROID) {\n        const {\n          inactiveStatusBarBackgroundColor,\n          activeStatusBarBackgroundColor,\n          translucent,\n        } = this.props;\n        if (active) {\n          let backgroundColor = activeStatusBarBackgroundColor;\n          const type = this.alertData.type;\n          if (type !== TYPE.custom) {\n            backgroundColor = this.getBackgroundColorForType(type);\n          }\n          StatusBar.setBackgroundColor(backgroundColor, true);\n          StatusBar.setTranslucent(translucent);\n        } else {\n          StatusBar.setBackgroundColor(inactiveStatusBarBackgroundColor, true);\n        }\n      }\n      const {inactiveStatusBarStyle, activeStatusBarStyle} = this.props;\n      if (active) {\n        StatusBar.setBarStyle(activeStatusBarStyle, true);\n      } else {\n        StatusBar.setBarStyle(inactiveStatusBarStyle, true);\n      }\n    }\n  };\n  clearCloseTimeoutID = () => {\n    if (this.closeTimeoutID) {\n      clearTimeout(this.closeTimeoutID);\n    }\n  };\n  animate = (toValue, duration = 450, onComplete = () => {}) => {\n    const {useNativeDriver, isInteraction} = this.props;\n    Animated.spring(this.state.animationValue, {\n      toValue: toValue,\n      duration: duration,\n      friction: 9,\n      useNativeDriver,\n      isInteraction,\n    }).start(onComplete);\n  };\n  getStartDelta = (height, start) => {\n    const windowHeight = HEIGHT;\n    const startMin = 0 - height;\n    const startMax = windowHeight + height;\n    if (start < 0 && start !== startMin) {\n      return startMin;\n    } else if (start > startMax) {\n      return startMax;\n    }\n    return start;\n  };\n  getEndDelta = (height, end) => {\n    const windowHeight = HEIGHT;\n    const endMin = 0;\n    const endMax = windowHeight;\n    if (end < endMin) {\n      return endMin;\n    } else if (end >= endMax) {\n      return endMax - height;\n    }\n    return end;\n  };\n  getOutputRange = (height, startDelta, endDelta) => {\n    if (!height) {\n      return [startDelta, endDelta];\n    }\n    const start = this.getStartDelta(height, startDelta);\n    const end = this.getEndDelta(height, endDelta);\n    return [start, end];\n  };\n  getStyleForType(type) {\n    const {defaultContainer} = this.props;\n    switch (type) {\n      case TYPE.info:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          {backgroundColor: this.props.infoColor},\n        ];\n      case TYPE.warn:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          {backgroundColor: this.props.warnColor},\n        ];\n      case TYPE.error:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          {backgroundColor: this.props.errorColor},\n        ];\n      case TYPE.success:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          {backgroundColor: this.props.successColor},\n        ];\n      default:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          StyleSheet.flatten(this.props.containerStyle),\n        ];\n    }\n  }\n  getSourceForType(type) {\n    switch (type) {\n      case TYPE.info:\n        return this.props.infoImageSrc;\n      case TYPE.warn:\n        return this.props.warnImageSrc;\n      case TYPE.error:\n        return this.props.errorImageSrc;\n      case TYPE.success:\n        return this.props.successImageSrc;\n      default:\n        return this.props.imageSrc;\n    }\n  }\n  getBackgroundColorForType(type) {\n    switch (type) {\n      case TYPE.info:\n        return this.props.infoColor;\n      case TYPE.warn:\n        return this.props.warnColor;\n      case TYPE.error:\n        return this.props.errorColor;\n      case TYPE.success:\n        return this.props.successColor;\n      default:\n        return this.props.containerStyle.backgroundColor;\n    }\n  }\n  _onLayoutEvent(event) {\n    const {height} = event.nativeEvent.layout;\n    if (height > this.state.height) {\n      const {startDelta, endDelta} = this.props;\n      const start = this.getStartDelta(height, startDelta);\n      const end = this.getEndDelta(height, endDelta);\n      if (startDelta !== start || endDelta !== end) {\n        this.setState({height});\n      }\n    }\n  }\n  _renderImage(source) {\n    if (this.props.renderImage) {\n      return this.props.renderImage(this.props, this.alertData);\n    }\n    return (\n      <ImageView\n        style={StyleSheet.flatten(this.props.imageStyle)}\n        source={source}\n      />\n    );\n  }\n  _renderTitle() {\n    if (this.props.renderTitle) {\n      return this.props.renderTitle(this.props, this.alertData);\n    }\n    const {titleTextProps, titleStyle, titleNumOfLines} = this.props;\n    return (\n      <TextView\n        {...titleTextProps}\n        style={StyleSheet.flatten(titleStyle)}\n        numberOfLines={titleNumOfLines}\n        text={this.alertData.title}\n      />\n    );\n  }\n  _renderMessage() {\n    if (this.props.renderMessage) {\n      return this.props.renderMessage(this.props, this.alertData);\n    }\n    const {messageTextProps, messageStyle, messageNumOfLines} = this.props;\n    return (\n      <TextView\n        {...messageTextProps}\n        style={StyleSheet.flatten(messageStyle)}\n        numberOfLines={messageNumOfLines}\n        text={this.alertData.message}\n      />\n    );\n  }\n  _renderCancel(show = false) {\n    if (!show) {\n      return null;\n    }\n    if (this.props.renderCancel) {\n      return this.props.renderCancel(this.props, this.alertData);\n    } else {\n      const {cancelBtnImageSrc, cancelBtnImageStyle} = this.props;\n      return (\n        <CancelButton\n          imageStyle={cancelBtnImageStyle}\n          imageSrc={cancelBtnImageSrc}\n          onPress={() => this.closeAction(ACTION.cancel)}\n        />\n      );\n    }\n  }\n  render() {\n    const {isOpen} = this.state;\n    if (!isOpen) {\n      return null;\n    }\n    const {\n      elevation,\n      zIndex,\n      wrapperStyle,\n      tapToCloseEnabled,\n      accessibilityLabel,\n      testID,\n      accessible,\n      contentContainerStyle,\n      defaultTextContainer,\n      startDelta,\n      endDelta,\n      translucent,\n      updateStatusBar,\n      showCancel,\n    } = this.props;\n    const {animationValue, topValue, height} = this.state;\n    const {type, payload} = this.alertData;\n    let style = this.getStyleForType(type);\n    let imageSrc = this.getSourceForType(type);\n    // imageSrc is overridden when payload has source property\n    // other than it existing and not an object there is no validation to ensure it is image source expected by Image\n    if (\n      payload &&\n      payload.hasOwnProperty('source') &&\n      payload.source &&\n      typeof payload.source !== 'object'\n    ) {\n      imageSrc = payload.source;\n    }\n    if (IS_ANDROID && translucent) {\n      style = [style, {paddingTop: StatusBar.currentHeight}];\n    }\n    this.updateStatusBar(updateStatusBar, true);\n    const outputRange = this.getOutputRange(height, startDelta, endDelta);\n    let wrapperAnimStyle = {\n      transform: [\n        {\n          translateY: animationValue.interpolate({\n            inputRange: [0, 1],\n            outputRange,\n          }),\n        },\n      ],\n      position: 'absolute',\n      top: topValue,\n      left: 0,\n      right: 0,\n      elevation: elevation,\n    };\n    if (zIndex != null) {\n      wrapperAnimStyle.zIndex = zIndex;\n    }\n    let ContentView = SafeAreaView;\n    if (IS_IOS_BELOW_11 || IS_ANDROID) {\n      ContentView = View;\n    }\n    const activeOpacity = !tapToCloseEnabled || showCancel ? 1 : 0.95;\n    const onPress = !tapToCloseEnabled\n      ? null\n      : () => this.closeAction(ACTION.tap);\n    return (\n      <Animated.View\n        ref={ref => (this.mainView = ref)}\n        {...this.panResponder.panHandlers}\n        style={[wrapperAnimStyle, wrapperStyle]}>\n        <TouchableOpacity\n          activeOpacity={activeOpacity}\n          onPress={onPress}\n          disabled={!tapToCloseEnabled}\n          onLayout={event => this._onLayoutEvent(event)}\n          testID={testID}\n          accessibilityLabel={accessibilityLabel}\n          accessible={accessible}>\n          <View style={style}>\n            <ContentView style={StyleSheet.flatten(contentContainerStyle)}>\n              {this._renderImage(imageSrc)}\n              <View style={StyleSheet.flatten(defaultTextContainer)}>\n                {this._renderTitle()}\n                {this._renderMessage()}\n              </View>\n            </ContentView>\n            {this._renderCancel(showCancel)}\n          </View>\n        </TouchableOpacity>\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}