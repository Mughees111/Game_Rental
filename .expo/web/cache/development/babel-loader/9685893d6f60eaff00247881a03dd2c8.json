{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Mughees/Projects/React.Pro/Game Rental/Code/src/Screens/SignInV.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { StatusBar } from 'expo-status-bar';\nimport { CAccountMail, CAccountPassword } from \"../Components/SvgIcons\";\nimport { doConsole, retrieveItem, storeItem, validateEmail } from \"./../utils/functions\";\nimport { urls } from \"./../utils/Api_urls\";\nimport { changeLoggedIn, changeLoggedInVendor } from \"../../Common\";\nimport DropdownAlert from \"react-native-dropdownalert\";\nimport { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nvar alertRef;\n\nvar SignInV = function SignInV(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      langg = _useState4[0],\n      setLangg = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      langtext = _useState6[0],\n      setLangtext = _useState6[1];\n\n  var _useState7 = useState('faisal@gmail.com'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState('12345678'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var doSignup = function doSignup() {\n    if (!validateEmail(email)) {\n      alertRef.alertWithType(\"error\", \"Error\", \"Please enter your valid email\");\n      return;\n    }\n\n    if (password.length < 6) {\n      alertRef.alertWithType(\"error\", \"Error\", \"Please enter at least 6 characters as password\");\n      return;\n    }\n\n    goSignup();\n  };\n\n  var goSignup = function goSignup() {\n    setLoading(true);\n    var token = \"khali\";\n    var body_data = {\n      email: email,\n      password: password\n    };\n    doConsole(\" I request @ \" + urls.API_VENDOR + \"login\");\n    doConsole(body_data);\n    fetch(urls.API_VENDOR + 'login', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: body_data\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      doConsole(\" I receive \");\n      doConsole(responseJson);\n\n      if (responseJson.action == \"success\") {\n        storeItem(\"login_data_vendor\", responseJson.data).then(function () {\n          setLoading(false);\n          changeLoggedInVendor.changeNow(1);\n        });\n      } else {\n        setLoading(false);\n        alertRef.alertWithType(\"error\", \"Error\", responseJson.error);\n      }\n    }).catch(function (error) {\n      console.log(error);\n      setLoading(false);\n      alertRef.alertWithType(\"error\", \"Error\", \"Internet error\");\n    });\n  };\n\n  var doGuest = function doGuest() {\n    setLoading(true);\n    var token = \"khali\";\n    var body_data = {\n      email: email,\n      password: password\n    };\n    doConsole(\" I request @ \" + urls.API + \"do_guest\");\n    doConsole(body_data);\n    fetch(urls.API + 'do_guest', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body_data)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      doConsole(\" I receive \");\n      doConsole(responseJson);\n\n      if (responseJson.action == \"success\") {\n        storeItem(\"login_data_vendor\", responseJson.data).then(function () {\n          setLoading(false);\n          console.log(\"helloololololo\");\n          changeLoggedInVendor.changeNow(1);\n        });\n      } else {\n        setLoading(false);\n        alertRef.alertWithType(\"error\", \"Error\", responseJson.error);\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      alertRef.alertWithType(\"error\", \"Error\", \"Internet error\");\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      zIndex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, React.createElement(DropdownAlert, {\n    ref: function ref(_ref) {\n      return alertRef = _ref;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  })), React.createElement(LinearGradient, {\n    colors: ['#0D0D0D', '#17162B'],\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      marginLeft: 10,\n      width: \"80%\",\n      alignSelf: 'center',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: 'PBo',\n      fontSize: 24,\n      color: '#FFFFFF',\n      marginTop: Platform.OS == 'ios' ? 30 : 27,\n      alignSelf: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, \"LOGO\"), React.createElement(Text, {\n    style: {\n      fontFamily: 'PSBo',\n      fontSize: 24,\n      color: '#FFFFFF',\n      marginTop: 130\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Sign InV\"), React.createElement(View, {\n    style: [styles.textInputContainer],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, React.createElement(CAccountMail, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    style: [styles.textInput],\n    placeholderTextColor: \"#BFBFBF\",\n    autoCapitalize: \"none\",\n    placeholder: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(v) {\n      setEmail(v);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.textInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, React.createElement(CAccountPassword, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    style: [styles.textInput],\n    placeholderTextColor: \"#BFBFBF\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(v) {\n      setPassword(v);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 5\n    },\n    onPress: function onPress() {\n      alert(\"this will work on your server only\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      fontFamily: \"PMe\",\n      color: '#A047C8',\n      alignSelf: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (!loading) doSignup();\n    },\n    style: {\n      borderWidth: 1,\n      borderColor: '#FFFFFF',\n      width: 314,\n      height: 54,\n      borderRadius: 9,\n      marginTop: 40,\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: 'PMe',\n      fontSize: 18,\n      color: '#FFFFFF'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, \"Sign In\"), loading && React.createElement(ActivityIndicator, {\n    color: \"#fff\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 112\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 15\n    },\n    onPress: function onPress() {\n      navigation.navigate(\"CreateAccountV\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      fontFamily: \"PMe\",\n      color: '#A047C8',\n      alignSelf: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"Create Account\")))));\n};\n\nvar styles = StyleSheet.create({\n  textInputContainer: {\n    height: 48,\n    backgroundColor: '#000000',\n    borderRadius: 8,\n    marginTop: 15,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 10\n  },\n  textInput: {\n    width: '100%',\n    height: \"100%\",\n    color: '#BFBFBF',\n    fontFamily: 'PRe',\n    fontSize: 12,\n    marginLeft: 10,\n    marginTop: 2,\n    alignItems: 'center'\n  }\n});\nexport default SignInV;","map":{"version":3,"sources":["/Users/Mughees/Projects/React.Pro/Game Rental/Code/src/Screens/SignInV.js"],"names":["React","LinearGradient","StatusBar","CAccountMail","CAccountPassword","doConsole","retrieveItem","storeItem","validateEmail","urls","changeLoggedIn","changeLoggedInVendor","DropdownAlert","useState","useEffect","useNavigation","alertRef","SignInV","props","navigation","loading","setLoading","langg","setLangg","langtext","setLangtext","email","setEmail","password","setPassword","doSignup","alertWithType","length","goSignup","token","body_data","API_VENDOR","fetch","method","headers","Accept","body","then","response","json","responseJson","action","data","changeNow","error","catch","console","log","doGuest","API","JSON","stringify","flex","zIndex","ref","marginLeft","width","alignSelf","fontFamily","fontSize","color","marginTop","Platform","OS","styles","textInputContainer","textInput","v","alert","borderWidth","borderColor","height","borderRadius","justifyContent","alignItems","flexDirection","navigate","StyleSheet","create","backgroundColor","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, TextInput, StyleSheet, Platform, Image, ImageBackground, TouchableOpacity, Dimensions, ActivityIndicator } from 'react-native'\n\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { StatusBar } from 'expo-status-bar';\nimport { CAccountMail, CAccountPassword } from '../Components/SvgIcons';\n\n\n\nimport { doConsole, retrieveItem, storeItem,validateEmail } from \"./../utils/functions\";\nimport { urls } from \"./../utils/Api_urls\";\nimport { changeLoggedIn, changeLoggedInVendor } from \"../../Common\";\n\n\nimport DropdownAlert from \"react-native-dropdownalert\";\nimport { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nvar alertRef;\n\n\nconst SignInV = (props) => {\n\n\n  const navigation = useNavigation()\n\n  const [loading, setLoading] = useState(false)\n  const [langg, setLangg] = useState(false)\n  const [langtext, setLangtext] = useState(false)\n  const [email, setEmail] = useState('faisal@gmail.com')\n  const [password, setPassword] = useState('12345678')\n\n\n  const doSignup = ()=>{\n    if(!validateEmail(email))\n    {\n      alertRef.alertWithType(\"error\",\"Error\",\"Please enter your valid email\");\n      return;\n    }\n\n\n    if(password.length<6)\n    {\n      alertRef.alertWithType(\"error\",\"Error\",\"Please enter at least 6 characters as password\");\n      return;\n    }\n    goSignup()\n  }\n\n\n  const goSignup = ()=>{\n    setLoading(true)\n        var token = \"khali\";\n        var body_data = {email,password};\n        doConsole(\" I request @ \"+ urls.API_VENDOR+\"login\");\n        doConsole(body_data);\n        fetch(urls.API_VENDOR + 'login', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: body_data\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            doConsole(\" I receive \");\n            doConsole(responseJson);\n            if (responseJson.action == \"success\") {\n                storeItem(\"login_data_vendor\", responseJson.data).then(() => {\n                    setLoading(false)\n                    changeLoggedInVendor.changeNow(1)\n                });\n            }\n            else {\n                setLoading(false)\n                alertRef.alertWithType(\"error\",\"Error\",responseJson.error)\n            }\n        }).catch((error) => {\n            console.log(error)\n            setLoading(false)\n            alertRef.alertWithType(\"error\",\"Error\",\"Internet error\")\n        });\n  }\n\n  const doGuest = ()=>{\n    setLoading(true)\n        \n        var token = \"khali\";\n        var body_data = {email,password};\n        doConsole(\" I request @ \"+urls.API+\"do_guest\");\n        doConsole(body_data);\n        fetch(urls.API + 'do_guest', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body_data),\n        }).then((response) => response.json())\n        .then((responseJson) => {\n            doConsole(\" I receive \");\n            doConsole(responseJson);\n            if (responseJson.action == \"success\") {\n                storeItem(\"login_data_vendor\", responseJson.data).then(() => {\n                  setLoading(false)\n                 console.log(\"helloololololo\");\n                //   if(responseJson.data.step==1)\n                //   {\n                //       navigation.navigate(\"Address1\")\n                //   }\n                //   else if(responseJson.data.step==2)\n                //   {\n                //       navigation.navigate(\"Interests\")\n                //   }\n                //   else if(responseJson.data.step==3)\n                //   {\n                //       navigation.navigate(\"TitleYouOwn\")\n                //   }\n                //   else if(responseJson.data.step==4)\n                //   {\n                //       navigation.navigate(\"SystemOwns\")\n                //   }\n                //   else{\n                //     changeLoggedIn.changeNow(1)\n                //   }\n\n                changeLoggedInVendor.changeNow(1)\n                    \n                });\n            }\n            else {\n                setLoading(false)\n                alertRef.alertWithType(\"error\",\"Error\",responseJson.error)\n            }\n        }).catch((error) => {\n            setLoading(false)\n            alertRef.alertWithType(\"error\",\"Error\",\"Internet error\")\n        });\n  }\n\n\n    return (\n        <View style={{ flex: 1, }}>\n            <StatusBar\n                hidden={true}\n            />\n            <View style={{ zIndex: 1 }}>\n              <DropdownAlert ref={ref => alertRef = ref} />\n            </View>\n            <LinearGradient\n                // Background Linear Gradient\n                colors={['#0D0D0D', '#17162B']}\n                style={{ flex: 1 }}\n            >\n                <View style={{ marginLeft: 10, width: \"80%\", alignSelf: 'center', flex: 1 }}>\n                    <Text style={{ fontFamily: 'PBo', fontSize: 24, color: '#FFFFFF', marginTop: Platform.OS == 'ios' ? 30 : 27, alignSelf: 'flex-end' }}>LOGO</Text>\n                    <Text style={{fontFamily:'PSBo',fontSize:24,color:'#FFFFFF',marginTop:130}}>Sign InV</Text>\n                    \n                    <View style={[styles.textInputContainer]}>\n                        <CAccountMail />\n                        <TextInput\n                            style={[styles.textInput]}\n                            placeholderTextColor=\"#BFBFBF\"\n                            autoCapitalize=\"none\"\n                            placeholder=\"Email\"\n                            value={email} // just a state variable\n                            onChangeText={(v) => {\n                                setEmail(v)\n                            }}\n                        />\n                    </View>\n\n                    <View style={styles.textInputContainer}>\n                        <CAccountPassword />\n                        <TextInput\n                            style={[styles.textInput]}\n                            placeholderTextColor=\"#BFBFBF\"\n                            secureTextEntry={true}\n                            autoCapitalize=\"none\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChangeText={(v) => {\n                                setPassword(v)\n                            }}\n                        />\n                    </View>\n                    <TouchableOpacity style={{marginTop:5}} onPress={()=>{\n                        alert(\"this will work on your server only\")\n                    }}>\n                        <Text style={{fontSize:12,fontFamily:\"PMe\",color:'#A047C8',alignSelf:'flex-end'}}>Forgot Password?</Text>\n                    </TouchableOpacity>\n                    \n                    <TouchableOpacity \n                         onPress={()=>{\n                            // props.navigation.navigate('OTP')\n                            if(!loading) doSignup()\n                        }}\n                    style={{borderWidth:1,borderColor:'#FFFFFF',width:314,height:54,borderRadius:9,marginTop:40,justifyContent:'center',alignItems:'center',flexDirection:\"row\"}}>\n                        <Text style={{fontFamily:'PMe',fontSize:18,color:'#FFFFFF'}}>Sign In</Text>{loading && <ActivityIndicator color={\"#fff\"} size={\"small\"} />}\n                    </TouchableOpacity>\n\n                    <TouchableOpacity style={{marginTop:15}} onPress={()=>{\n                        navigation.navigate(\"CreateAccountV\")\n                    }}>\n                        <Text style={{fontSize:12,fontFamily:\"PMe\",color:'#A047C8',alignSelf:\"center\"}}>Create Account</Text>\n                    </TouchableOpacity>\n\n\n                </View>\n                \n            </LinearGradient>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    textInputContainer: {\n        // width: 315,\n        height: 48,\n        backgroundColor: '#000000',\n        borderRadius: 8,\n        marginTop: 15,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingLeft: 10\n    },\n    textInput: {\n        width: '100%',\n        height: \"100%\",\n        color: '#BFBFBF',\n        fontFamily: 'PRe',\n        fontSize: 12,\n        marginLeft: 10,\n        marginTop: 2,\n        alignItems: 'center'\n    }\n})\n\n\nexport default SignInV\n"]},"metadata":{},"sourceType":"module"}